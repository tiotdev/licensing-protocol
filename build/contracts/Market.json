{
  "contractName": "Market",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_USDC",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "licenseType",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "licenseContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referrerWallet",
          "type": "address"
        }
      ],
      "name": "buyLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_USDC\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"licenseContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrerWallet\",\"type\":\"address\"}],\"name\":\"buyLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/jp/Documents/GitHub/learn-truffle/contracts/Market.sol\":\"Market\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"/Users/jp/Documents/GitHub/learn-truffle/contracts/Factory.sol\":{\"keccak256\":\"0xdf8f2b0183297d71b2913e09636f81c71b96db79440f8a1592fe624e7df8c7fe\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6d01f1600415aeee1f9612c1aa6703abaf505e238dc2799ebd00e50fa9d15677\",\"dweb:/ipfs/QmYxXFTA4kGNhNSqqXvEuLJeNKA9rZXdqkAaFjFs5iAYVY\"]},\"/Users/jp/Documents/GitHub/learn-truffle/contracts/License.sol\":{\"keccak256\":\"0x1161e9e21d52d951221616041e09a6f898e736c0ca0f8c0f633f6bdc77c24ea0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ad59e335b9860f8b93c8127da4a0bfef33cfc2d36e1aca37db383501db9eb468\",\"dweb:/ipfs/Qmd4zueV6xz3s2WuqR5UXJRX6ASB6BzMVhcvRXUod2dryH\"]},\"/Users/jp/Documents/GitHub/learn-truffle/contracts/Market.sol\":{\"keccak256\":\"0xe65c6996c52eef50638faf80528c73f59cd66f6506968f8847a93b953fc8814b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0a89870754cd60ab3a2471ee67349a532512b607577962b423089b1f5534e80f\",\"dweb:/ipfs/QmdBbnBqK32a2XSgwdDapzTAQ3nE3uq9mByvmcbAbengxo\"]},\"/Users/jp/Documents/GitHub/learn-truffle/contracts/interfaces/ILicense.sol\":{\"keccak256\":\"0xbac0080633c512dc4413075ae0554c1b65fe3abcee7028dfa9ce524990bc7653\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0a31cbce0ff26ebe7412a12576b6927c64028b9f0129bb42e06a61bb17459ab9\",\"dweb:/ipfs/QmePMv563eta8VYCDURcXgWygnH3u3t24o1zGg8xdUHNRQ\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x09c24182fc76ee97a5c604b6ff1a8afb3648535b6ba1820c23b243a40cc792a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8e9e0df6f208de6686e4a25850e5d1ebb5c57c2cba4220f924602455e390384\",\"dweb:/ipfs/QmZPxANB5regShavJEo8XtstXnHPxtbPucwbaJtzKFGDLh\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xfce1eb6398eae0e2b50251140866a70a3106193f101972c878bba1dbf44929ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0709c3f462b28b400f57db181254ad970967c3b49a8948ef5e05929b106ffe\",\"dweb:/ipfs/QmNe3sRmPKw1T7q7m733tk7tFKpi3jo9PCisDPMbjeg3kJ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x7de6e64d4a8075e803a972cc77c4c91463e0c3777e4110eacfb5d4a71759b2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b3b09ef36374c1c104ee896797dadf2e81466d2143b481d3f1ddc7d9f3873\",\"dweb:/ipfs/QmSWtqs28RHDezRWBbmEfqiPYwsGTKj44NRbuxvZ96cqMU\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9784827a0575eab840a3b2d42900390724c79139063150955c95f5b730545669\",\"dweb:/ipfs/Qmergdvk1vDFSpXxZSXghPm5SxKBUqrqkZdYmsUSaMwaXK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x27f9465d84949f059ed37b23c82f4a9fc16c1b8d6fbd69837a0f920875e2af83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://decb618117829151750642e6fa9f324b825841f9d68fab5143249d2ca204787b\",\"dweb:/ipfs/QmcyPk34JPQBpJQb8dGPsd1AzimGjXTMDKZYL73rNAC6oZ\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xaff99b54915f57e2a4e71b8d15afd4ee425410e5a6f45c07517ae1beb806f8bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://15432ec031f4cfa6709921289e198b030a0c5eac75b5a3e0eb64827a2b3b5595\",\"dweb:/ipfs/QmZvR1KuuDvuzXFiADCngTKyMCTy31uhq9U6CazP59B55j\"]}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b506040516107cb3803806107cb83398101604081905261002f91610062565b6001600160a01b039182166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a0516106f86100d36000396000818160600152818161023f0152818161032b0152610403015260008181609d015260d601526106f86000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633c8a42951461004657806389a302711461005b578063c45a015514610098575b600080fd5b6100596100543660046105f5565b6100bf565b005b6100827f000000000000000000000000000000000000000000000000000000000000000081565b60405161008f9190610631565b60405180910390f35b6100827f000000000000000000000000000000000000000000000000000000000000000081565b6040516302c6a0a560e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302c6a0a59061010b908590600401610631565b60206040518083038186803b15801561012357600080fd5b505afa158015610137573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015b9190610645565b61019e5760405162461bcd60e51b815260206004820152600f60248201526e494e56414c4944204c4943454e534560881b60448201526064015b60405180910390fd5b604051632c82cf1960e21b8152600481018490526000906001600160a01b0384169063b20b3c649060240160206040518083038186803b1580156101e157600080fd5b505afa1580156101f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102199190610645565b9050801561042d57604051636eb1769f60e11b81523360048201523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dd62ed3e9060440160206040518083038186803b15801561028957600080fd5b505afa15801561029d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c19190610645565b9050818110156103115760405162461bcd60e51b815260206004820152601b60248201527a494e53554646494349454e54205553444320414c4c4f57414e434560281b6044820152606401610195565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610360903390600401610631565b60206040518083038186803b15801561037857600080fd5b505afa15801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b09190610645565b9050828110156103fe5760405162461bcd60e51b8152602060048201526019602482015278494e53554646494349454e5420555344432042414c414e434560381b6044820152606401610195565b61042a7f000000000000000000000000000000000000000000000000000000000000000033878661049b565b50505b604051631a83402360e31b8152336004820152602481018590526001600160a01b03838116604483015284169063d41a011890606401600060405180830381600087803b15801561047d57600080fd5b505af1158015610491573d6000803e3d6000fd5b5050505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916104ff919061065e565b6000604051808303816000865af19150503d806000811461053c576040519150601f19603f3d011682016040523d82523d6000602084013e610541565b606091505b509150915081801561056b57508051158061056b57508080602001905181019061056b9190610699565b6105d15760405162461bcd60e51b815260206004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472604482015270185b9cd9995c919c9bdb4819985a5b1959607a1b6064820152608401610195565b505050505050565b80356001600160a01b03811681146105f057600080fd5b919050565b60008060006060848603121561060a57600080fd5b8335925061061a602085016105d9565b9150610628604085016105d9565b90509250925092565b6001600160a01b0391909116815260200190565b60006020828403121561065757600080fd5b5051919050565b6000825160005b8181101561067f5760208186018101518583015201610665565b8181111561068e576000828501525b509190910192915050565b6000602082840312156106ab57600080fd5b815180151581146106bb57600080fd5b939250505056fea2646970667358221220c342134be0081af91d836e622ca77ace49f5d008eed5f894caced1e0ba00888264736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80633c8a42951461004657806389a302711461005b578063c45a015514610098575b600080fd5b6100596100543660046105f5565b6100bf565b005b6100827f000000000000000000000000000000000000000000000000000000000000000081565b60405161008f9190610631565b60405180910390f35b6100827f000000000000000000000000000000000000000000000000000000000000000081565b6040516302c6a0a560e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302c6a0a59061010b908590600401610631565b60206040518083038186803b15801561012357600080fd5b505afa158015610137573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015b9190610645565b61019e5760405162461bcd60e51b815260206004820152600f60248201526e494e56414c4944204c4943454e534560881b60448201526064015b60405180910390fd5b604051632c82cf1960e21b8152600481018490526000906001600160a01b0384169063b20b3c649060240160206040518083038186803b1580156101e157600080fd5b505afa1580156101f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102199190610645565b9050801561042d57604051636eb1769f60e11b81523360048201523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dd62ed3e9060440160206040518083038186803b15801561028957600080fd5b505afa15801561029d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c19190610645565b9050818110156103115760405162461bcd60e51b815260206004820152601b60248201527a494e53554646494349454e54205553444320414c4c4f57414e434560281b6044820152606401610195565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610360903390600401610631565b60206040518083038186803b15801561037857600080fd5b505afa15801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b09190610645565b9050828110156103fe5760405162461bcd60e51b8152602060048201526019602482015278494e53554646494349454e5420555344432042414c414e434560381b6044820152606401610195565b61042a7f000000000000000000000000000000000000000000000000000000000000000033878661049b565b50505b604051631a83402360e31b8152336004820152602481018590526001600160a01b03838116604483015284169063d41a011890606401600060405180830381600087803b15801561047d57600080fd5b505af1158015610491573d6000803e3d6000fd5b5050505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916104ff919061065e565b6000604051808303816000865af19150503d806000811461053c576040519150601f19603f3d011682016040523d82523d6000602084013e610541565b606091505b509150915081801561056b57508051158061056b57508080602001905181019061056b9190610699565b6105d15760405162461bcd60e51b815260206004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472604482015270185b9cd9995c919c9bdb4819985a5b1959607a1b6064820152608401610195565b505050505050565b80356001600160a01b03811681146105f057600080fd5b919050565b60008060006060848603121561060a57600080fd5b8335925061061a602085016105d9565b9150610628604085016105d9565b90509250925092565b6001600160a01b0391909116815260200190565b60006020828403121561065757600080fd5b5051919050565b6000825160005b8181101561067f5760208186018101518583015201610665565b8181111561068e576000828501525b509190910192915050565b6000602082840312156106ab57600080fd5b815180151581146106bb57600080fd5b939250505056fea2646970667358221220c342134be0081af91d836e622ca77ace49f5d008eed5f894caced1e0ba00888264736f6c63430008090033",
  "immutableReferences": {
    "976": [
      {
        "length": 32,
        "start": 157
      },
      {
        "length": 32,
        "start": 214
      }
    ],
    "978": [
      {
        "length": 32,
        "start": 96
      },
      {
        "length": 32,
        "start": 575
      },
      {
        "length": 32,
        "start": 811
      },
      {
        "length": 32,
        "start": 1027
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:491:21",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:21",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:21"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:21"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:21",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:21",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:21"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:21"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:21",
                "type": ""
              }
            ],
            "src": "14:177:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:195:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "340:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "349:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "352:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "342:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "342:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "342:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "315:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "324:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "311:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "311:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "336:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "307:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "304:52:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "365:50:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "405:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "375:29:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:40:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "365:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "424:59:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "468:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "479:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "464:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "464:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "434:29:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:49:21"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "424:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "252:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "263:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "275:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "283:6:21",
                "type": ""
              }
            ],
            "src": "196:293:21"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4355:21",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:21",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:21"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:21"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:21",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:21",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:21"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:21"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:21",
                "type": ""
              }
            ],
            "src": "14:173:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "296:224:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "342:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "351:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "354:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "344:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "344:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "344:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "317:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "326:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "313:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "313:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "338:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "309:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "309:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "306:52:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "367:33:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "390:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "377:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "377:23:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "367:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "409:48:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "442:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "453:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "438:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "438:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "419:18:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "419:38:21"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "409:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "466:48:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "499:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "510:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "495:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "495:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "476:18:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "476:38:21"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "466:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "246:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "257:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "269:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "277:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "285:6:21",
                "type": ""
              }
            ],
            "src": "192:328:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "626:102:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "636:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "648:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "659:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "644:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "636:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "678:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "693:6:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "709:3:21",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "714:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "705:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "705:11:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "718:1:21",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "701:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "701:19:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "689:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "689:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "671:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "671:51:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "671:51:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "595:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "606:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "617:4:21",
                "type": ""
              }
            ],
            "src": "525:203:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "814:103:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "860:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "869:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "872:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "862:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "862:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "862:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "835:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "844:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "831:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "831:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "856:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "827:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "827:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "824:52:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "885:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "901:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "895:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "895:16:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "885:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "780:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "791:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "803:6:21",
                "type": ""
              }
            ],
            "src": "733:184:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1096:165:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1113:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1124:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1106:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1106:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1106:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1147:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1158:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1143:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1143:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1163:2:21",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1136:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1136:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1136:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1186:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1197:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1182:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1182:18:21"
                      },
                      {
                        "hexValue": "494e56414c4944204c4943454e5345",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1202:17:21",
                        "type": "",
                        "value": "INVALID LICENSE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1175:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1175:45:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1175:45:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1229:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1241:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1252:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1237:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1237:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1229:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_508d30bb0aa8214bb69b28ad8b2440da8eac416ad62e1dede3718123206c758e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1073:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1087:4:21",
                "type": ""
              }
            ],
            "src": "922:339:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1367:76:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1377:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1389:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1400:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1385:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1385:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1377:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1419:9:21"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1430:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1412:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1412:25:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1412:25:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1336:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1347:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1358:4:21",
                "type": ""
              }
            ],
            "src": "1266:177:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1577:175:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1587:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1599:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1610:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1595:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1595:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1587:4:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1622:29:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1640:3:21",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1645:1:21",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1636:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1636:11:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1649:1:21",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1632:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1632:19:21"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1626:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1667:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1682:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1690:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1678:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1678:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1660:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1660:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1660:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1714:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1725:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1710:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1710:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1734:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1742:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1730:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1730:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1703:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1703:43:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1703:43:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1538:9:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1549:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1557:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1568:4:21",
                "type": ""
              }
            ],
            "src": "1448:304:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1931:177:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1948:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1959:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1941:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1941:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1941:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1982:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1993:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1978:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1978:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1998:2:21",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1971:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1971:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1971:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2021:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2032:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2017:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2017:18:21"
                      },
                      {
                        "hexValue": "494e53554646494349454e54205553444320414c4c4f57414e4345",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2037:29:21",
                        "type": "",
                        "value": "INSUFFICIENT USDC ALLOWANCE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2010:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2010:57:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2010:57:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2076:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2088:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2099:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2084:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2084:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2076:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bdddc64231167c0c86ef245754a551a492a0fa1d8ab78ba8f22945d0624c8328__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1908:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1922:4:21",
                "type": ""
              }
            ],
            "src": "1757:351:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2287:175:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2304:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2315:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2297:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2297:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2297:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2338:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2349:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2334:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2334:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2354:2:21",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2327:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2327:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2327:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2377:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2388:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2373:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2373:18:21"
                      },
                      {
                        "hexValue": "494e53554646494349454e5420555344432042414c414e4345",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2393:27:21",
                        "type": "",
                        "value": "INSUFFICIENT USDC BALANCE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2366:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2366:55:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2366:55:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2430:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2442:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2453:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2438:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2438:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2430:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6357a608aa05544df99242866a1cd10adfe403fc9dfd21049123ec4d8aae7969__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2264:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2278:4:21",
                "type": ""
              }
            ],
            "src": "2113:349:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2624:218:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2634:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2646:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2657:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2642:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2642:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2634:4:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2669:29:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2687:3:21",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2692:1:21",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2683:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2683:11:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2696:1:21",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2679:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2679:19:21"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2673:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2714:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2729:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2737:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2725:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2725:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2707:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2707:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2707:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2761:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2772:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2757:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2757:18:21"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2777:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2750:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2750:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2750:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2804:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2815:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2800:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2800:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2824:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2832:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2820:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2820:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2793:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2793:43:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2793:43:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2577:9:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2588:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2596:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2604:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2615:4:21",
                "type": ""
              }
            ],
            "src": "2467:375:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3004:218:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3014:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3026:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3037:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3022:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3022:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3014:4:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3049:29:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3067:3:21",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3072:1:21",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3063:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3063:11:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3076:1:21",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3059:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3059:19:21"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3053:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3094:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3109:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3117:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3105:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3105:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3087:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3087:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3087:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3141:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3152:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3137:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3137:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3161:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3169:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3157:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3157:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3130:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3130:43:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3130:43:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3193:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3204:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3189:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3189:18:21"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3209:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3182:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3182:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3182:34:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2957:9:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2968:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2976:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2984:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2995:4:21",
                "type": ""
              }
            ],
            "src": "2847:375:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3364:289:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3374:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3394:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3388:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3388:13:21"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3378:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3410:10:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3419:1:21",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3414:1:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3481:77:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3506:3:21"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3511:1:21"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3502:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3502:11:21"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3529:6:21"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3537:1:21"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3525:3:21"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3525:14:21"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3541:4:21",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3521:3:21"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3521:25:21"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3515:5:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3515:32:21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3495:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3495:53:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3495:53:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3440:1:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3443:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3437:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3437:13:21"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3451:21:21",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3453:17:21",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3462:1:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3465:4:21",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3458:3:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3458:12:21"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3453:1:21"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3433:3:21",
                    "statements": []
                  },
                  "src": "3429:129:21"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3584:31:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3597:3:21"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3602:6:21"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3593:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3593:16:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3611:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3586:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3586:27:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3586:27:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3573:1:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3576:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3570:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3570:13:21"
                  },
                  "nodeType": "YulIf",
                  "src": "3567:48:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3624:23:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3635:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3640:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3631:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3631:16:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3624:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3340:3:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3345:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3356:3:21",
                "type": ""
              }
            ],
            "src": "3227:426:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3736:199:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3782:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3791:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3794:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3784:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3784:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3784:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3757:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3766:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3753:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3753:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3778:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3749:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3749:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "3746:52:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3807:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3826:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3820:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3820:16:21"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3811:5:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3889:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3898:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3901:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3891:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3891:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3891:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3858:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3879:5:21"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3872:6:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3872:13:21"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3865:6:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3865:21:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3855:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3855:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3848:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3848:40:21"
                  },
                  "nodeType": "YulIf",
                  "src": "3845:60:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3914:15:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3924:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3914:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3702:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3713:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3725:6:21",
                "type": ""
              }
            ],
            "src": "3658:277:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4114:239:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4131:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4142:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4124:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4124:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4124:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4165:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4176:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4161:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4161:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4181:2:21",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4154:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4154:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4154:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4204:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4215:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4200:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4200:18:21"
                      },
                      {
                        "hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4220:34:21",
                        "type": "",
                        "value": "TransferHelper::transferFrom: tr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4193:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4193:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4193:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4275:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4286:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4271:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4271:18:21"
                      },
                      {
                        "hexValue": "616e7366657246726f6d206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4291:19:21",
                        "type": "",
                        "value": "ansferFrom failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4264:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4264:47:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4264:47:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4320:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4332:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4343:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4328:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4328:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4320:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4091:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4105:4:21",
                "type": ""
              }
            ],
            "src": "3940:413:21"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_508d30bb0aa8214bb69b28ad8b2440da8eac416ad62e1dede3718123206c758e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"INVALID LICENSE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_bdddc64231167c0c86ef245754a551a492a0fa1d8ab78ba8f22945d0624c8328__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"INSUFFICIENT USDC ALLOWANCE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6357a608aa05544df99242866a1cd10adfe403fc9dfd21049123ec4d8aae7969__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"INSUFFICIENT USDC BALANCE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"TransferHelper::transferFrom: tr\")\n        mstore(add(headStart, 96), \"ansferFrom failed\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "274:1755:3:-:0;;;474:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;529:18:3;;;;;557:12;;;274:1755;;14:177:21;93:13;;-1:-1:-1;;;;;135:31:21;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;274:1755:3;;;;;;;;;;;;;;",
  "deployedSourceMap": "274:1755:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;906:1121;;;;;;:::i;:::-;;:::i;:::-;;334:29;;;;;;;;;;;;:::i;:::-;;;;;;;;296:32;;;;;906:1121;1178:49;;-1:-1:-1;;;1178:49:3;;-1:-1:-1;;;;;1186:7:3;1178:32;;;;:49;;1211:15;;1178:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1157:116;;;;-1:-1:-1;;;1157:116:3;;1124:2:21;1157:116:3;;;1106:21:21;1163:2;1143:18;;;1136:30;-1:-1:-1;;;1182:18:21;;;1175:45;1237:18;;1157:116:3;;;;;;;;;1299:56;;-1:-1:-1;;;1299:56:3;;;;;1412:25:21;;;1284:12:3;;-1:-1:-1;;;;;1299:43:3;;;;;1385:18:21;;1299:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1284:71;-1:-1:-1;1370:8:3;;1366:522;;1414:95;;-1:-1:-1;;;1414:95:3;;1454:10;1414:95;;;1660:34:21;1490:4:3;1710:18:21;;;1703:43;1394:17:3;;1421:4;-1:-1:-1;;;;;1414:22:3;;;;1595:18:21;;1414:95:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1394:115;;1544:4;1531:9;:17;;1523:57;;;;-1:-1:-1;;;1523:57:3;;1959:2:21;1523:57:3;;;1941:21:21;1998:2;1978:18;;;1971:30;-1:-1:-1;;;2017:18:21;;;2010:57;2084:18;;1523:57:3;1757:351:21;1523:57:3;1612:34;;-1:-1:-1;;;1612:34:3;;1594:15;;-1:-1:-1;;;;;1619:4:3;1612:22;;;;:34;;1635:10;;1612:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1594:52;;1679:4;1668:7;:15;;1660:53;;;;-1:-1:-1;;;1660:53:3;;2315:2:21;1660:53:3;;;2297:21:21;2354:2;2334:18;;;2327:30;-1:-1:-1;;;2373:18:21;;;2366:55;2438:18;;1660:53:3;2113:349:21;1660:53:3;1727:150;1776:4;1798:10;1826:15;1859:4;1727:31;:150::i;:::-;1380:508;;1366:522;1898:122;;-1:-1:-1;;;1898:122:3;;1947:10;1898:122;;;2707:34:21;2757:18;;;2750:34;;;-1:-1:-1;;;;;2820:15:21;;;2800:18;;;2793:43;1898:35:3;;;;;2642:18:21;;1898:122:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:992;906:1121;;;:::o;1096:486:20:-;1360:51;;;-1:-1:-1;;;;;3105:15:21;;;1360:51:20;;;3087:34:21;3157:15;;;3137:18;;;3130:43;3189:18;;;;3182:34;;;1360:51:20;;;;;;;;;;3022:18:21;;;;1360:51:20;;;;;;;-1:-1:-1;;;;;1360:51:20;-1:-1:-1;;;1360:51:20;;;1349:63;;-1:-1:-1;;;;1349:10:20;;;;:63;;1360:51;1349:63;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1313:99;;;;1443:7;:57;;;;-1:-1:-1;1455:11:20;;:16;;:44;;;1486:4;1475:24;;;;;;;;;;;;:::i;:::-;1422:153;;;;-1:-1:-1;;;1422:153:20;;4142:2:21;1422:153:20;;;4124:21:21;4181:2;4161:18;;;4154:30;4220:34;4200:18;;;4193:62;-1:-1:-1;;;4271:18:21;;;4264:47;4328:19;;1422:153:20;3940:413:21;1422:153:20;1225:357;;1096:486;;;;:::o;14:173:21:-;82:20;;-1:-1:-1;;;;;131:31:21;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:328::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;390:9;377:23;367:33;;419:38;453:2;442:9;438:18;419:38;:::i;:::-;409:48;;476:38;510:2;499:9;495:18;476:38;:::i;:::-;466:48;;192:328;;;;;:::o;525:203::-;-1:-1:-1;;;;;689:32:21;;;;671:51;;659:2;644:18;;525:203::o;733:184::-;803:6;856:2;844:9;835:7;831:23;827:32;824:52;;;872:1;869;862:12;824:52;-1:-1:-1;895:16:21;;733:184;-1:-1:-1;733:184:21:o;3227:426::-;3356:3;3394:6;3388:13;3419:1;3429:129;3443:6;3440:1;3437:13;3429:129;;;3541:4;3525:14;;;3521:25;;3515:32;3502:11;;;3495:53;3458:12;3429:129;;;3576:6;3573:1;3570:13;3567:48;;;3611:1;3602:6;3597:3;3593:16;3586:27;3567:48;-1:-1:-1;3631:16:21;;;;;3227:426;-1:-1:-1;;3227:426:21:o;3658:277::-;3725:6;3778:2;3766:9;3757:7;3753:23;3749:32;3746:52;;;3794:1;3791;3784:12;3746:52;3826:9;3820:16;3879:5;3872:13;3865:21;3858:5;3855:32;3845:60;;3901:1;3898;3891:12;3845:60;3924:5;3658:277;-1:-1:-1;;;3658:277:21:o",
  "source": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@uniswap/lib/contracts/libraries/TransferHelper.sol';\n\nimport './License.sol';\nimport './Factory.sol';\n\n// @author Julian Peters\n// @title Market\ncontract Market {\n    address public immutable factory;\n    address public immutable USDC;\n\n    // @param _factory Address of the Factory contract\n    // @param _USDC Address of the USDC contract\n    constructor(address _factory, address _USDC) {\n        factory = _factory;\n        USDC = _USDC;\n    }\n\n    // @notice Send funds to License contract and trigger the buying of a license\n    // @param licenseType Type of license to buy\n    // @param licenseContract Address of the license contract to buy from\n    // @param referrerWallet Wallet that receives the referrer commission (usually the frontend). Set to 0x0 for none.\n    function buyLicense(\n        uint256 licenseType,\n        address licenseContract,\n        address referrerWallet\n    ) external {\n        // @dev Only allow buying of licenses created by factory (prevent interaction with malicious contracts)\n        require(\n            Factory(factory).licensePosition(licenseContract) != 0,\n            'INVALID LICENSE'\n        );\n\n        uint256 cost = License(licenseContract).licenseTypeToPrice(licenseType);\n\n        if (cost > 0) {\n            uint256 allowance = IERC20(USDC).allowance(\n                msg.sender,\n                address(this)\n            );\n            require(allowance >= cost, 'INSUFFICIENT USDC ALLOWANCE');\n            uint256 balance = IERC20(USDC).balanceOf(msg.sender);\n            require(balance >= cost, 'INSUFFICIENT USDC BALANCE');\n            TransferHelper.safeTransferFrom(\n                USDC,\n                msg.sender,\n                licenseContract,\n                cost\n            );\n        }\n\n        License(licenseContract).buyLicense(\n            msg.sender,\n            licenseType,\n            referrerWallet\n        );\n    }\n}\n",
  "sourcePath": "/Users/jp/Documents/GitHub/learn-truffle/contracts/Market.sol",
  "ast": {
    "absolutePath": "/Users/jp/Documents/GitHub/learn-truffle/contracts/Market.sol",
    "exportedSymbols": {
      "Address": [
        3495
      ],
      "Context": [
        3516
      ],
      "Create2": [
        3627
      ],
      "ERC1155": [
        2372
      ],
      "ERC165": [
        3651
      ],
      "Factory": [
        246
      ],
      "IERC1155": [
        2494
      ],
      "IERC1155MetadataURI": [
        2550
      ],
      "IERC1155Receiver": [
        2535
      ],
      "IERC165": [
        3663
      ],
      "IERC20": [
        3174
      ],
      "ILicense": [
        1143
      ],
      "License": [
        968
      ],
      "Market": [
        1089
      ],
      "Ownable": [
        1247
      ],
      "ReentrancyGuard": [
        1287
      ],
      "TransferHelper": [
        3823
      ]
    },
    "id": 1090,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 970,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 971,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1090,
        "sourceUnit": 3175,
        "src": "63:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/lib/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/lib/contracts/libraries/TransferHelper.sol",
        "id": 972,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1090,
        "sourceUnit": 3824,
        "src": "120:61:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jp/Documents/GitHub/learn-truffle/contracts/License.sol",
        "file": "./License.sol",
        "id": 973,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1090,
        "sourceUnit": 969,
        "src": "183:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jp/Documents/GitHub/learn-truffle/contracts/Factory.sol",
        "file": "./Factory.sol",
        "id": 974,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1090,
        "sourceUnit": 247,
        "src": "207:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Market",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1089,
        "linearizedBaseContracts": [
          1089
        ],
        "name": "Market",
        "nameLocation": "283:6:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c45a0155",
            "id": 976,
            "mutability": "immutable",
            "name": "factory",
            "nameLocation": "321:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 1089,
            "src": "296:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 975,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "296:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89a30271",
            "id": 978,
            "mutability": "immutable",
            "name": "USDC",
            "nameLocation": "359:4:3",
            "nodeType": "VariableDeclaration",
            "scope": 1089,
            "src": "334:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 977,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "334:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 993,
              "nodeType": "Block",
              "src": "519:57:3",
              "statements": [
                {
                  "expression": {
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 985,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 976,
                      "src": "529:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 986,
                      "name": "_factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 980,
                      "src": "539:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "529:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 988,
                  "nodeType": "ExpressionStatement",
                  "src": "529:18:3"
                },
                {
                  "expression": {
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 989,
                      "name": "USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "557:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 990,
                      "name": "_USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 982,
                      "src": "564:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "557:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
                  "src": "557:12:3"
                }
              ]
            },
            "id": 994,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "494:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "486:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 982,
                  "mutability": "mutable",
                  "name": "_USDC",
                  "nameLocation": "512:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "504:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "485:33:3"
            },
            "returnParameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "519:0:3"
            },
            "scope": 1089,
            "src": "474:102:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1087,
              "nodeType": "Block",
              "src": "1035:992:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1008,
                              "name": "licenseContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 998,
                              "src": "1211:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1005,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 976,
                                  "src": "1186:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1004,
                                "name": "Factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 246,
                                "src": "1178:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Factory_$246_$",
                                  "typeString": "type(contract Factory)"
                                }
                              },
                              "id": 1006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1178:16:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Factory_$246",
                                "typeString": "contract Factory"
                              }
                            },
                            "id": 1007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "licensePosition",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83,
                            "src": "1178:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1178:49:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1231:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1178:54:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e56414c4944204c4943454e5345",
                        "id": 1012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1246:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_508d30bb0aa8214bb69b28ad8b2440da8eac416ad62e1dede3718123206c758e",
                          "typeString": "literal_string \"INVALID LICENSE\""
                        },
                        "value": "INVALID LICENSE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_508d30bb0aa8214bb69b28ad8b2440da8eac416ad62e1dede3718123206c758e",
                          "typeString": "literal_string \"INVALID LICENSE\""
                        }
                      ],
                      "id": 1003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1157:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1157:116:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1014,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:116:3"
                },
                {
                  "assignments": [
                    1016
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1016,
                      "mutability": "mutable",
                      "name": "cost",
                      "nameLocation": "1292:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1087,
                      "src": "1284:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1015,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1284:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1023,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1021,
                        "name": "licenseType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 996,
                        "src": "1343:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1018,
                            "name": "licenseContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 998,
                            "src": "1307:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1017,
                          "name": "License",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 968,
                          "src": "1299:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_License_$968_$",
                            "typeString": "type(contract License)"
                          }
                        },
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1299:24:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_License_$968",
                          "typeString": "contract License"
                        }
                      },
                      "id": 1020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "licenseTypeToPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 279,
                      "src": "1299:43:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1299:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1284:71:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1024,
                      "name": "cost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "1370:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1377:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1370:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1076,
                  "nodeType": "IfStatement",
                  "src": "1366:522:3",
                  "trueBody": {
                    "id": 1075,
                    "nodeType": "Block",
                    "src": "1380:508:3",
                    "statements": [
                      {
                        "assignments": [
                          1028
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1028,
                            "mutability": "mutable",
                            "name": "allowance",
                            "nameLocation": "1402:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1075,
                            "src": "1394:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1027,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1394:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1040,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1033,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1454:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1454:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1037,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1490:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Market_$1089",
                                    "typeString": "contract Market"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Market_$1089",
                                    "typeString": "contract Market"
                                  }
                                ],
                                "id": 1036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1482:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1035,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1482:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1482:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1030,
                                  "name": "USDC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 978,
                                  "src": "1421:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1029,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3174,
                                "src": "1414:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3174_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1414:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3174",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3133,
                            "src": "1414:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1414:95:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1394:115:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1042,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1028,
                                "src": "1531:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1043,
                                "name": "cost",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1016,
                                "src": "1544:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1531:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e53554646494349454e54205553444320414c4c4f57414e4345",
                              "id": 1045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1550:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bdddc64231167c0c86ef245754a551a492a0fa1d8ab78ba8f22945d0624c8328",
                                "typeString": "literal_string \"INSUFFICIENT USDC ALLOWANCE\""
                              },
                              "value": "INSUFFICIENT USDC ALLOWANCE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bdddc64231167c0c86ef245754a551a492a0fa1d8ab78ba8f22945d0624c8328",
                                "typeString": "literal_string \"INSUFFICIENT USDC ALLOWANCE\""
                              }
                            ],
                            "id": 1041,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1523:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1523:57:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1047,
                        "nodeType": "ExpressionStatement",
                        "src": "1523:57:3"
                      },
                      {
                        "assignments": [
                          1049
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1049,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "1602:7:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1075,
                            "src": "1594:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1048,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1594:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1057,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1054,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1635:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1635:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1051,
                                  "name": "USDC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 978,
                                  "src": "1619:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1050,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3174,
                                "src": "1612:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3174_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1612:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3174",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3113,
                            "src": "1612:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1612:34:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1594:52:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1059,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1049,
                                "src": "1668:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1060,
                                "name": "cost",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1016,
                                "src": "1679:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1668:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e53554646494349454e5420555344432042414c414e4345",
                              "id": 1062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1685:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6357a608aa05544df99242866a1cd10adfe403fc9dfd21049123ec4d8aae7969",
                                "typeString": "literal_string \"INSUFFICIENT USDC BALANCE\""
                              },
                              "value": "INSUFFICIENT USDC BALANCE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6357a608aa05544df99242866a1cd10adfe403fc9dfd21049123ec4d8aae7969",
                                "typeString": "literal_string \"INSUFFICIENT USDC BALANCE\""
                              }
                            ],
                            "id": 1058,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1660:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1660:53:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1064,
                        "nodeType": "ExpressionStatement",
                        "src": "1660:53:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1068,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "1776:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1069,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1798:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1798:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1071,
                              "name": "licenseContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 998,
                              "src": "1826:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1072,
                              "name": "cost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1016,
                              "src": "1859:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1065,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3823,
                              "src": "1727:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3823_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 1067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3797,
                            "src": "1727:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 1073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1727:150:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1074,
                        "nodeType": "ExpressionStatement",
                        "src": "1727:150:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1081,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1947:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1947:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1083,
                        "name": "licenseType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 996,
                        "src": "1971:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1084,
                        "name": "referrerWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "1996:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1078,
                            "name": "licenseContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 998,
                            "src": "1906:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1077,
                          "name": "License",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 968,
                          "src": "1898:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_License_$968_$",
                            "typeString": "type(contract License)"
                          }
                        },
                        "id": 1079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1898:24:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_License_$968",
                          "typeString": "contract License"
                        }
                      },
                      "id": 1080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "buyLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 728,
                      "src": "1898:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address) external"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:122:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "1898:122:3"
                }
              ]
            },
            "functionSelector": "3c8a4295",
            "id": 1088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyLicense",
            "nameLocation": "915:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 996,
                  "mutability": "mutable",
                  "name": "licenseType",
                  "nameLocation": "943:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "935:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 998,
                  "mutability": "mutable",
                  "name": "licenseContract",
                  "nameLocation": "972:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "964:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "mutability": "mutable",
                  "name": "referrerWallet",
                  "nameLocation": "1005:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "997:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "925:100:3"
            },
            "returnParameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1035:0:3"
            },
            "scope": 1089,
            "src": "906:1121:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1090,
        "src": "274:1755:3",
        "usedErrors": []
      }
    ],
    "src": "37:1993:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/jp/Documents/GitHub/learn-truffle/contracts/Market.sol",
    "exportedSymbols": {
      "Address": [
        3495
      ],
      "Context": [
        3516
      ],
      "Create2": [
        3627
      ],
      "ERC1155": [
        2372
      ],
      "ERC165": [
        3651
      ],
      "Factory": [
        246
      ],
      "IERC1155": [
        2494
      ],
      "IERC1155MetadataURI": [
        2550
      ],
      "IERC1155Receiver": [
        2535
      ],
      "IERC165": [
        3663
      ],
      "IERC20": [
        3174
      ],
      "ILicense": [
        1143
      ],
      "License": [
        968
      ],
      "Market": [
        1089
      ],
      "Ownable": [
        1247
      ],
      "ReentrancyGuard": [
        1287
      ],
      "TransferHelper": [
        3823
      ]
    },
    "id": 1090,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 970,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 971,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1090,
        "sourceUnit": 3175,
        "src": "63:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/lib/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/lib/contracts/libraries/TransferHelper.sol",
        "id": 972,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1090,
        "sourceUnit": 3824,
        "src": "120:61:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jp/Documents/GitHub/learn-truffle/contracts/License.sol",
        "file": "./License.sol",
        "id": 973,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1090,
        "sourceUnit": 969,
        "src": "183:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jp/Documents/GitHub/learn-truffle/contracts/Factory.sol",
        "file": "./Factory.sol",
        "id": 974,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1090,
        "sourceUnit": 247,
        "src": "207:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Market",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1089,
        "linearizedBaseContracts": [
          1089
        ],
        "name": "Market",
        "nameLocation": "283:6:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c45a0155",
            "id": 976,
            "mutability": "immutable",
            "name": "factory",
            "nameLocation": "321:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 1089,
            "src": "296:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 975,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "296:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89a30271",
            "id": 978,
            "mutability": "immutable",
            "name": "USDC",
            "nameLocation": "359:4:3",
            "nodeType": "VariableDeclaration",
            "scope": 1089,
            "src": "334:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 977,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "334:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 993,
              "nodeType": "Block",
              "src": "519:57:3",
              "statements": [
                {
                  "expression": {
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 985,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 976,
                      "src": "529:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 986,
                      "name": "_factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 980,
                      "src": "539:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "529:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 988,
                  "nodeType": "ExpressionStatement",
                  "src": "529:18:3"
                },
                {
                  "expression": {
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 989,
                      "name": "USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "557:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 990,
                      "name": "_USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 982,
                      "src": "564:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "557:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
                  "src": "557:12:3"
                }
              ]
            },
            "id": 994,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "494:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "486:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 982,
                  "mutability": "mutable",
                  "name": "_USDC",
                  "nameLocation": "512:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "504:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "485:33:3"
            },
            "returnParameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "519:0:3"
            },
            "scope": 1089,
            "src": "474:102:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1087,
              "nodeType": "Block",
              "src": "1035:992:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1008,
                              "name": "licenseContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 998,
                              "src": "1211:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1005,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 976,
                                  "src": "1186:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1004,
                                "name": "Factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 246,
                                "src": "1178:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Factory_$246_$",
                                  "typeString": "type(contract Factory)"
                                }
                              },
                              "id": 1006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1178:16:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Factory_$246",
                                "typeString": "contract Factory"
                              }
                            },
                            "id": 1007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "licensePosition",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83,
                            "src": "1178:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1178:49:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1231:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1178:54:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e56414c4944204c4943454e5345",
                        "id": 1012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1246:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_508d30bb0aa8214bb69b28ad8b2440da8eac416ad62e1dede3718123206c758e",
                          "typeString": "literal_string \"INVALID LICENSE\""
                        },
                        "value": "INVALID LICENSE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_508d30bb0aa8214bb69b28ad8b2440da8eac416ad62e1dede3718123206c758e",
                          "typeString": "literal_string \"INVALID LICENSE\""
                        }
                      ],
                      "id": 1003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1157:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1157:116:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1014,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:116:3"
                },
                {
                  "assignments": [
                    1016
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1016,
                      "mutability": "mutable",
                      "name": "cost",
                      "nameLocation": "1292:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1087,
                      "src": "1284:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1015,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1284:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1023,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1021,
                        "name": "licenseType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 996,
                        "src": "1343:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1018,
                            "name": "licenseContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 998,
                            "src": "1307:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1017,
                          "name": "License",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 968,
                          "src": "1299:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_License_$968_$",
                            "typeString": "type(contract License)"
                          }
                        },
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1299:24:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_License_$968",
                          "typeString": "contract License"
                        }
                      },
                      "id": 1020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "licenseTypeToPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 279,
                      "src": "1299:43:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1299:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1284:71:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1024,
                      "name": "cost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "1370:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1377:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1370:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1076,
                  "nodeType": "IfStatement",
                  "src": "1366:522:3",
                  "trueBody": {
                    "id": 1075,
                    "nodeType": "Block",
                    "src": "1380:508:3",
                    "statements": [
                      {
                        "assignments": [
                          1028
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1028,
                            "mutability": "mutable",
                            "name": "allowance",
                            "nameLocation": "1402:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1075,
                            "src": "1394:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1027,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1394:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1040,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1033,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1454:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1454:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1037,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1490:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Market_$1089",
                                    "typeString": "contract Market"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Market_$1089",
                                    "typeString": "contract Market"
                                  }
                                ],
                                "id": 1036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1482:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1035,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1482:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1482:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1030,
                                  "name": "USDC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 978,
                                  "src": "1421:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1029,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3174,
                                "src": "1414:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3174_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1414:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3174",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3133,
                            "src": "1414:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1414:95:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1394:115:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1042,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1028,
                                "src": "1531:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1043,
                                "name": "cost",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1016,
                                "src": "1544:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1531:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e53554646494349454e54205553444320414c4c4f57414e4345",
                              "id": 1045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1550:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bdddc64231167c0c86ef245754a551a492a0fa1d8ab78ba8f22945d0624c8328",
                                "typeString": "literal_string \"INSUFFICIENT USDC ALLOWANCE\""
                              },
                              "value": "INSUFFICIENT USDC ALLOWANCE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bdddc64231167c0c86ef245754a551a492a0fa1d8ab78ba8f22945d0624c8328",
                                "typeString": "literal_string \"INSUFFICIENT USDC ALLOWANCE\""
                              }
                            ],
                            "id": 1041,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1523:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1523:57:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1047,
                        "nodeType": "ExpressionStatement",
                        "src": "1523:57:3"
                      },
                      {
                        "assignments": [
                          1049
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1049,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "1602:7:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1075,
                            "src": "1594:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1048,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1594:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1057,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1054,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1635:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1635:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1051,
                                  "name": "USDC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 978,
                                  "src": "1619:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1050,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3174,
                                "src": "1612:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3174_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1612:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3174",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3113,
                            "src": "1612:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1612:34:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1594:52:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1059,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1049,
                                "src": "1668:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1060,
                                "name": "cost",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1016,
                                "src": "1679:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1668:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e53554646494349454e5420555344432042414c414e4345",
                              "id": 1062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1685:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6357a608aa05544df99242866a1cd10adfe403fc9dfd21049123ec4d8aae7969",
                                "typeString": "literal_string \"INSUFFICIENT USDC BALANCE\""
                              },
                              "value": "INSUFFICIENT USDC BALANCE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6357a608aa05544df99242866a1cd10adfe403fc9dfd21049123ec4d8aae7969",
                                "typeString": "literal_string \"INSUFFICIENT USDC BALANCE\""
                              }
                            ],
                            "id": 1058,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1660:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1660:53:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1064,
                        "nodeType": "ExpressionStatement",
                        "src": "1660:53:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1068,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "1776:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1069,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1798:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1798:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1071,
                              "name": "licenseContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 998,
                              "src": "1826:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1072,
                              "name": "cost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1016,
                              "src": "1859:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1065,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3823,
                              "src": "1727:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3823_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 1067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3797,
                            "src": "1727:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 1073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1727:150:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1074,
                        "nodeType": "ExpressionStatement",
                        "src": "1727:150:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1081,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1947:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1947:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1083,
                        "name": "licenseType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 996,
                        "src": "1971:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1084,
                        "name": "referrerWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "1996:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1078,
                            "name": "licenseContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 998,
                            "src": "1906:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1077,
                          "name": "License",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 968,
                          "src": "1898:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_License_$968_$",
                            "typeString": "type(contract License)"
                          }
                        },
                        "id": 1079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1898:24:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_License_$968",
                          "typeString": "contract License"
                        }
                      },
                      "id": 1080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "buyLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 728,
                      "src": "1898:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address) external"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:122:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "1898:122:3"
                }
              ]
            },
            "functionSelector": "3c8a4295",
            "id": 1088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyLicense",
            "nameLocation": "915:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 996,
                  "mutability": "mutable",
                  "name": "licenseType",
                  "nameLocation": "943:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "935:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 998,
                  "mutability": "mutable",
                  "name": "licenseContract",
                  "nameLocation": "972:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "964:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "mutability": "mutable",
                  "name": "referrerWallet",
                  "nameLocation": "1005:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "997:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "925:100:3"
            },
            "returnParameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1035:0:3"
            },
            "scope": 1089,
            "src": "906:1121:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1090,
        "src": "274:1755:3",
        "usedErrors": []
      }
    ],
    "src": "37:1993:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x1A14A74A2E27b33BeC80Bc7469a1fd79185843D0",
      "transactionHash": "0x216f1818d4955e858bf63e6fa7b7292649295ab5bde9cbe3a5767c3bcece66f6"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-10-03T19:19:39.687Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}