{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_USDC",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "ipfsHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "licenseTypes",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "licensePrices",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "licenseSupply",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "licenseContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "LicenseCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allLicenses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "availableLicenseTypes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "licensePosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "referrerFee",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryFee",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "treasuryWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "availableLicenseTypesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "allLicensesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ipfsHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "licenseTypes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "licensePrices",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "licenseSupply",
          "type": "uint256[]"
        }
      ],
      "name": "createLicense",
      "outputs": [
        {
          "internalType": "address",
          "name": "licenseContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_treasuryFee",
          "type": "uint8"
        }
      ],
      "name": "setTreasuryFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_referrerFee",
          "type": "uint8"
        }
      ],
      "name": "setReferrerFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasuryWallet",
          "type": "address"
        }
      ],
      "name": "setTreasuryWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ipfsHash",
          "type": "bytes32"
        }
      ],
      "name": "addLicenseType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDC\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"licenseTypes\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"licensePrices\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"licenseSupply\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"licenseContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"LicenseCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"addLicenseType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allLicenses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allLicensesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"availableLicenseTypes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableLicenseTypesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"licenseTypes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"licensePrices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"licenseSupply\",\"type\":\"uint256[]\"}],\"name\":\"createLicense\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"licenseContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"licensePosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referrerFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_referrerFee\",\"type\":\"uint8\"}],\"name\":\"setReferrerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_treasuryFee\",\"type\":\"uint8\"}],\"name\":\"setTreasuryFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasuryWallet\",\"type\":\"address\"}],\"name\":\"setTreasuryWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/jp/Documents/GitHub/learn-truffle/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"/Users/jp/Documents/GitHub/learn-truffle/contracts/Factory.sol\":{\"keccak256\":\"0xdf8f2b0183297d71b2913e09636f81c71b96db79440f8a1592fe624e7df8c7fe\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6d01f1600415aeee1f9612c1aa6703abaf505e238dc2799ebd00e50fa9d15677\",\"dweb:/ipfs/QmYxXFTA4kGNhNSqqXvEuLJeNKA9rZXdqkAaFjFs5iAYVY\"]},\"/Users/jp/Documents/GitHub/learn-truffle/contracts/License.sol\":{\"keccak256\":\"0x1161e9e21d52d951221616041e09a6f898e736c0ca0f8c0f633f6bdc77c24ea0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ad59e335b9860f8b93c8127da4a0bfef33cfc2d36e1aca37db383501db9eb468\",\"dweb:/ipfs/Qmd4zueV6xz3s2WuqR5UXJRX6ASB6BzMVhcvRXUod2dryH\"]},\"/Users/jp/Documents/GitHub/learn-truffle/contracts/interfaces/ILicense.sol\":{\"keccak256\":\"0xbac0080633c512dc4413075ae0554c1b65fe3abcee7028dfa9ce524990bc7653\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0a31cbce0ff26ebe7412a12576b6927c64028b9f0129bb42e06a61bb17459ab9\",\"dweb:/ipfs/QmePMv563eta8VYCDURcXgWygnH3u3t24o1zGg8xdUHNRQ\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x09c24182fc76ee97a5c604b6ff1a8afb3648535b6ba1820c23b243a40cc792a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8e9e0df6f208de6686e4a25850e5d1ebb5c57c2cba4220f924602455e390384\",\"dweb:/ipfs/QmZPxANB5regShavJEo8XtstXnHPxtbPucwbaJtzKFGDLh\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xfce1eb6398eae0e2b50251140866a70a3106193f101972c878bba1dbf44929ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0709c3f462b28b400f57db181254ad970967c3b49a8948ef5e05929b106ffe\",\"dweb:/ipfs/QmNe3sRmPKw1T7q7m733tk7tFKpi3jo9PCisDPMbjeg3kJ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x7de6e64d4a8075e803a972cc77c4c91463e0c3777e4110eacfb5d4a71759b2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b3b09ef36374c1c104ee896797dadf2e81466d2143b481d3f1ddc7d9f3873\",\"dweb:/ipfs/QmSWtqs28RHDezRWBbmEfqiPYwsGTKj44NRbuxvZ96cqMU\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9784827a0575eab840a3b2d42900390724c79139063150955c95f5b730545669\",\"dweb:/ipfs/Qmergdvk1vDFSpXxZSXghPm5SxKBUqrqkZdYmsUSaMwaXK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x27f9465d84949f059ed37b23c82f4a9fc16c1b8d6fbd69837a0f920875e2af83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://decb618117829151750642e6fa9f324b825841f9d68fab5143249d2ca204787b\",\"dweb:/ipfs/QmcyPk34JPQBpJQb8dGPsd1AzimGjXTMDKZYL73rNAC6oZ\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xaff99b54915f57e2a4e71b8d15afd4ee425410e5a6f45c07517ae1beb806f8bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://15432ec031f4cfa6709921289e198b030a0c5eac75b5a3e0eb64827a2b3b5595\",\"dweb:/ipfs/QmZvR1KuuDvuzXFiADCngTKyMCTy31uhq9U6CazP59B55j\"]}},\"version\":1}",
  "bytecode": "0x60a06040526000805461ffff60a01b191661050560a11b17905534801561002557600080fd5b50604051613908380380613908833981016040819052610044916100c0565b61004d33610070565b600180546001600160a01b031916331790556001600160a01b03166080526100f0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d257600080fd5b81516001600160a01b03811681146100e957600080fd5b9392505050565b6080516137f6610112600039600081816101be01526105c001526137f66000f3fe60806040523480156200001157600080fd5b5060043610620000ee5760003560e01c806302c6a0a514620000f35780631487c50614620001295780634626402b14620001595780636e88a7bd146200016d578063715018a6146200019557806380ed493014620001a157806389a3027114620001b85780638da5cb5b14620001e0578063a8602fea14620001ea578063af98a7391462000201578063b5811ad21462000218578063c07392701462000221578063c8b01e081462000238578063cc32d176146200024f578063d2d00c021462000264578063ec9372e9146200027b578063f2fde38b1462000284575b600080fd5b6200011662000104366004620008df565b60046020526000908152604090205481565b6040519081526020015b60405180910390f35b620001406200013a36600462000911565b6200029b565b6040516001600160a01b03909116815260200162000120565b60015462000140906001600160a01b031681565b6000546200018290600160a81b900460ff1681565b60405160ff909116815260200162000120565b6200019f620002c6565b005b62000116620001b236600462000911565b62000311565b620001407f000000000000000000000000000000000000000000000000000000000000000081565b6200014062000333565b6200019f620001fb366004620008df565b62000342565b6200019f620002123660046200092b565b62000398565b60025462000116565b6200019f6200023236600462000911565b62000413565b6200019f620002493660046200092b565b6200047c565b6000546200018290600160a01b900460ff1681565b62000140620002753660046200099e565b620004f7565b60035462000116565b6200019f62000295366004620008df565b620006cc565b60038181548110620002ac57600080fd5b6000918252602090912001546001600160a01b0316905081565b33620002d162000333565b6001600160a01b031614620003035760405162461bcd60e51b8152600401620002fa9062000a4b565b60405180910390fd5b6200030f600062000775565b565b600281815481106200032257600080fd5b600091825260209091200154905081565b6000546001600160a01b031690565b336200034d62000333565b6001600160a01b031614620003765760405162461bcd60e51b8152600401620002fa9062000a4b565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b33620003a362000333565b6001600160a01b031614620003cc5760405162461bcd60e51b8152600401620002fa9062000a4b565b600f8160ff161115620003f35760405162461bcd60e51b8152600401620002fa9062000a80565b6000805460ff909216600160a01b0260ff60a01b19909216919091179055565b336200041e62000333565b6001600160a01b031614620004475760405162461bcd60e51b8152600401620002fa9062000a4b565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0155565b336200048762000333565b6001600160a01b031614620004b05760405162461bcd60e51b8152600401620002fa9062000a4b565b600f8160ff161115620004d75760405162461bcd60e51b8152600401620002fa9062000a80565b6000805460ff909216600160a81b0260ff60a81b19909216919091179055565b600080604051806020016200050c90620008d1565b601f1982820381018352601f9091011660405290506200052f60008a83620007c5565b6001600160a01b038116600090815260046020526040902054909250156200058b5760405162461bcd60e51b815260206004820152600e60248201526d4c4943454e53452045584953545360901b6044820152606401620002fa565b60405163058b69f760e51b81526001600160a01b0383169063b16d3ee090620005e9908c908c908c908c908c908c908c9033907f00000000000000000000000000000000000000000000000000000000000000009060040162000aed565b600060405180830381600087803b1580156200060457600080fd5b505af115801562000619573d6000803e3d6000fd5b5050600380546001810182557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b03871690811790915590546000918252600460205260409182902055517f63afa380b93d772de9fcd36ce2e689f2d9c5791053ccbda8492659e9825160ac9250620006b891508b908b908b908b908b908b908b908b90339062000aed565b60405180910390a150979650505050505050565b33620006d762000333565b6001600160a01b031614620007005760405162461bcd60e51b8152600401620002fa9062000a4b565b6001600160a01b038116620007675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620002fa565b620007728162000775565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080844710156200081a5760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401620002fa565b82516200086a5760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401620002fa565b8383516020850187f590506001600160a01b038116620008c95760405162461bcd60e51b8152602060048201526019602482015278437265617465323a204661696c6564206f6e206465706c6f7960381b6044820152606401620002fa565b949350505050565b612c618062000b6083390190565b600060208284031215620008f257600080fd5b81356001600160a01b03811681146200090a57600080fd5b9392505050565b6000602082840312156200092457600080fd5b5035919050565b6000602082840312156200093e57600080fd5b813560ff811681146200090a57600080fd5b60008083601f8401126200096357600080fd5b5081356001600160401b038111156200097b57600080fd5b6020830191508360208260051b85010111156200099757600080fd5b9250929050565b60008060008060008060006080888a031215620009ba57600080fd5b8735965060208801356001600160401b0380821115620009d957600080fd5b620009e78b838c0162000950565b909850965060408a013591508082111562000a0157600080fd5b62000a0f8b838c0162000950565b909650945060608a013591508082111562000a2957600080fd5b5062000a388a828b0162000950565b989b979a50959850939692959293505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527b4645452043414e4e4f5420424520484947484552205448414e20313560201b604082015260600190565b81835260006001600160fb1b0383111562000ad057600080fd5b8260051b8083602087013760009401602001938452509192915050565b89815260c06020820152600062000b0960c083018a8c62000ab6565b828103604084015262000b1e81898b62000ab6565b9050828103606084015262000b3581878962000ab6565b6001600160a01b0395861660808501529390941660a090920191909152509897505050505050505056fe60a06040526000600d553480156200001657600080fd5b5060405180606001604052806036815260200162002c2b603691396200003c3362000057565b6200004781620000a7565b50600160045533608052620001a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051620000bc906003906020840190620000c0565b5050565b828054620000ce9062000166565b90600052602060002090601f016020900481019282620000f257600085556200013d565b82601f106200010d57805160ff19168380011785556200013d565b828001600101855582156200013d579182015b828111156200013d57825182559160200191906001019062000120565b506200014b9291506200014f565b5090565b5b808211156200014b576000815560010162000150565b600181811c908216806200017b57607f821691505b602082108114156200019d57634e487b7160e01b600052602260045260246000fd5b50919050565b608051612a49620001e26000396000818161032e0152818161081801528181610a8101528181610d9e01528181610e330152610f060152612a496000f3fe608060405234801561001057600080fd5b506004361061015e5760003560e01c8062fdd58e1461016357806301ffc9a71461018957806302d05d3f146101ac5780630e89341c146101cc57806327334b19146101ec5780632eb2c2d61461020c5780634d0ed231146102215780634e1273f4146102445780634e71d92d1461026457806354631f001461026c578063715018a61461027f57806384783cd41461028757806389a302711461029a5780638da5cb5b146102ad578063a22cb465146102b5578063a3611b71146102c8578063af38d757146102db578063b16d3ee0146102e3578063b20b3c64146102f6578063c0892d9c14610316578063c45a015514610329578063c623674f14610350578063d41a011814610359578063e64ff9371461036c578063e93a6c901461038c578063e985e9c5146103ac578063eaf1b6c9146103e8578063f242432a146103fb578063f2fde38b1461040e575b600080fd5b610176610171366004611f22565b610421565b6040519081526020015b60405180910390f35b61019c610197366004611f64565b6104ba565b6040519015158152602001610180565b6005546101bf906001600160a01b031681565b6040516101809190611f88565b6101df6101da366004611f9c565b61050c565b604051610180919061200d565b6101766101fa366004611f9c565b600a6020526000908152604090205481565b61021f61021a366004612169565b6105a0565b005b61019c61022f366004611f9c565b60086020526000908152604090205460ff1681565b610257610252366004612216565b610637565b604051610180919061231d565b61021f610760565b61021f61027a366004612330565b61076b565b61021f610916565b610176610295366004611f9c565b61094f565b6006546101bf906001600160a01b031681565b6101bf610970565b61021f6102c336600461236a565b61097f565b6101766102d6366004611f9c565b610a56565b610176610a66565b61021f6102f13660046123ee565b610a76565b610176610304366004611f9c565b60096020526000908152604090205481565b610176610324366004611f9c565b610c12565b6101bf7f000000000000000000000000000000000000000000000000000000000000000081565b61017660075481565b61021f6103673660046124b6565b610c22565b61017661037a366004611f9c565b600f6020526000908152604090205481565b61017661039a3660046124f8565b60106020526000908152604090205481565b61019c6103ba366004612515565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b61021f6103f6366004611f9c565b611180565b61021f610409366004612543565b611222565b61021f61041c3660046124f8565b6112a9565b60006001600160a01b0383166104925760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060009081526001602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806104eb57506001600160e01b031982166303a24d0760e21b145b8061050657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606003805461051b906125ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610547906125ab565b80156105945780601f1061056957610100808354040283529160200191610594565b820191906000526020600020905b81548152906001019060200180831161057757829003601f168201915b50505050509050919050565b6001600160a01b0385163314806105bc57506105bc85336103ba565b6106235760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610489565b6106308585858585611349565b5050505050565b6060815183511461069c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610489565b600083516001600160401b038111156106b7576106b7612020565b6040519080825280602002602001820160405280156106e0578160200160208202803683370190505b50905060005b84518110156107585761072b858281518110610704576107046125e6565b602002602001015185838151811061071e5761071e6125e6565b6020026020010151610421565b82828151811061073d5761073d6125e6565b602090810291909101015261075181612612565b90506106e6565b509392505050565b61076933611537565b565b33610774610970565b6001600160a01b03161461079a5760405162461bcd60e51b81526004016104899061262d565b826107b75760405162461bcd60e51b815260040161048990612662565b60008381526008602052604090205460ff16156108145760405162461bcd60e51b815260206004820152601b60248201527a4c4943454e5345205459504520414c52454144592045584953545360281b6044820152606401610489565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b5811ad26040518163ffffffff1660e01b815260040160206040518083038186803b15801561086f57600080fd5b505afa158015610883573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a79190612690565b9050808411156108c95760405162461bcd60e51b815260040161048990612662565b6000848152600860209081526040808320805460ff19166001179055600990915290208390558115610910576109008260016126a9565b6000858152600a60205260409020555b50505050565b3361091f610970565b6001600160a01b0316146109455760405162461bcd60e51b81526004016104899061262d565b61076960006116a9565b600c818154811061095f57600080fd5b600091825260209091200154905081565b6000546001600160a01b031690565b336001600160a01b03831614156109ea5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610489565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600e818154811061095f57600080fd5b6000610a71336116f9565b905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ada5760405162461bcd60e51b81526020600482015260096024820152682327a92124a22222a760b91b6044820152606401610489565b600680546001600160a01b0319166001600160a01b0383161790558487148015610b0357508683145b610b415760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890409a92a69a82a8869608b1b6044820152606401610489565b60005b87811015610bb157610b9f898983818110610b6157610b616125e6565b90506020020135888884818110610b7a57610b7a6125e6565b90506020020135878785818110610b9357610b936125e6565b9050602002013561076b565b80610ba981612612565b915050610b44565b50610bbb8961183c565b610bdf826000670de0b6b3a764000060405180602001604052806000815250611894565b610be8826112a9565b50600580546001600160a01b0319166001600160a01b039290921691909117905550505050505050565b600b818154811061095f57600080fd5b60008281526008602052604090205460ff161515600114610c555760405162461bcd60e51b815260040161048990612662565b6000828152600a602052604090205460011415610caa5760405162461bcd60e51b81526020600482015260136024820152721352539508131253525508115610d151511151606a1b6044820152606401610489565b6000828152600960205260408082205460065491516370a0823160e01b81529092916001600160a01b0316906370a0823190610cea903090600401611f88565b60206040518083038186803b158015610d0257600080fd5b505afa158015610d16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3a9190612690565b600d54909150610d4a83836126c1565b1015610d945760405162461bcd60e51b8152602060048201526019602482015278125394d551919250d251539508141056535153950814d15395603a1b6044820152606401610489565b811561105e5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cc32d1766040518163ffffffff1660e01b815260040160206040518083038186803b158015610df557600080fd5b505afa158015610e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2d91906126d8565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634626402b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e8a57600080fd5b505afa158015610e9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec291906126fb565b9050600060ff831615610f02576064610ede60ff851687612718565b610ee89190612737565b600654909150610f02906001600160a01b03168383611994565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e88a7bd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f5d57600080fd5b505afa158015610f71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9591906126d8565b60ff16905060006001600160a01b03881615801590610fb45750600082115b15610fe9576064610fc58389612718565b610fcf9190612737565b600654909150610fe9906001600160a01b03168983611994565b80610ff484896126c1565b610ffe91906126c1565b436000908152600f60205260408120805490919061101d9084906126a9565b9091555050600e8054600181018255600091909152437fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd9091015550505050505b61107a8585600160405180602001604052806000815250611894565b6000848152600a6020526040902054156110b3576000848152600a602052604081208054600192906110ad9084906126c1565b90915550505b600754604080519182526020820186905281018390527fcf26c900a2bf5c38a7a8b59e617b948b9d1ec327f0a9d372f85d9668971d5b9d9060600160405180910390a16006546040516370a0823160e01b81526001600160a01b03909116906370a0823190611126903090600401611f88565b60206040518083038186803b15801561113e57600080fd5b505afa158015611152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111769190612690565b600d555050505050565b33611189610970565b6001600160a01b0316146111af5760405162461bcd60e51b81526004016104899061262d565b6111b88161183c565b50600754600b805460018181019092557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90191909155600c80549182018155600052437fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c790910155565b6001600160a01b03851633148061123e575061123e85336103ba565b61129c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610489565b6106308585858585611abe565b336112b2610970565b6001600160a01b0316146112d85760405162461bcd60e51b81526004016104899061262d565b6001600160a01b03811661133d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610489565b611346816116a9565b50565b81518351146113ab5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610489565b6001600160a01b0384166113d15760405162461bcd60e51b815260040161048990612759565b336113e0818787878787611bcd565b60005b84518110156114c9576000858281518110611400576114006125e6565b60200260200101519050600085838151811061141e5761141e6125e6565b60209081029190910181015160008481526001835260408082206001600160a01b038e16835290935291909120549091508181101561146f5760405162461bcd60e51b81526004016104899061279e565b60008381526001602090815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906114ae9084906126a9565b92505081905550505050806114c290612612565b90506113e3565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516115199291906127e8565b60405180910390a461152f818787878787611c8d565b505050505050565b6002600454141561158a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610489565b6002600455600061159a826116f9565b9050600081116115df5760405162461bcd60e51b815260206004820152601060248201526f4e4f204645455320544f20434c41494d60801b6044820152606401610489565b6006546115f6906001600160a01b03168383611994565b6006546040516370a0823160e01b81526001600160a01b03909116906370a0823190611626903090600401611f88565b60206040518083038186803b15801561163e57600080fd5b505afa158015611652573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116769190612690565b600d556116846001436126c1565b6001600160a01b03909216600090815260106020526040902091909155506001600455565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080611707836000610421565b90506000811161174d5760405162461bcd60e51b81526020600482015260116024820152704e4f20524947485420544f20434c41494d60781b6044820152606401610489565b6000805b600e54811015611812576001600160a01b038516600090815260106020526040902054600e805483908110611788576117886125e6565b90600052602060002001541180156117bc575043600e82815481106117af576117af6125e6565b9060005260206000200154105b1561180057600f6000600e83815481106117d8576117d86125e6565b9060005260206000200154815260200190815260200160002054826117fd91906126a9565b91505b8061180a81612612565b915050611751565b50600061182783670de0b6b3a7640000612737565b90506118338183612737565b95945050505050565b8060001a60f81b6001600160f81b03191661188f5760405162461bcd60e51b8152602060048201526013602482015272121054d20810d0539393d50810914813955313606a1b6044820152606401610489565b600755565b6001600160a01b0384166118f45760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610489565b336119148160008761190588611df8565b61190e88611df8565b87611bcd565b60008481526001602090815260408083206001600160a01b0389168452909152812080548592906119469084906126a9565b909155505060408051858152602081018590526001600160a01b0380881692600092918516916000805160206129f4833981519152910160405180910390a461063081600087878787611e43565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916119f0919061280d565b6000604051808303816000865af19150503d8060008114611a2d576040519150601f19603f3d011682016040523d82523d6000602084013e611a32565b606091505b5091509150818015611a5c575080511580611a5c575080806020019051810190611a5c9190612829565b6106305760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b6064820152608401610489565b6001600160a01b038416611ae45760405162461bcd60e51b815260040161048990612759565b33611af481878761190588611df8565b60008481526001602090815260408083206001600160a01b038a16845290915290205483811015611b375760405162461bcd60e51b81526004016104899061279e565b60008581526001602090815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611b769084906126a9565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616916000805160206129f4833981519152910160405180910390a4611bc4828888888888611e43565b50505050505050565b60005b8351811015611bc457838181518110611beb57611beb6125e6565b602002602001015160001415611c7b57600e5415611c7b576000611c0e876116f9565b90508015611c1f57611c1f87611537565b6000611c2c876000610421565b1115611c54576000611c3d876116f9565b90508015611c4e57611c4e87611537565b50611c79565b611c5f6001436126c1565b6001600160a01b0387166000908152601060205260409020555b505b80611c8581612612565b915050611bd0565b6001600160a01b0384163b1561152f5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611cd19089908990889088908890600401612846565b602060405180830381600087803b158015611ceb57600080fd5b505af1925050508015611d1b575060408051601f3d908101601f19168201909252611d18918101906128a4565b60015b611dc857611d276128c1565b806308c379a01415611d615750611d3c6128dd565b80611d475750611d63565b8060405162461bcd60e51b8152600401610489919061200d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610489565b6001600160e01b0319811663bc197c8160e01b14611bc45760405162461bcd60e51b815260040161048990612966565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611e3257611e326125e6565b602090810291909101015292915050565b6001600160a01b0384163b1561152f5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611e8790899089908890889088906004016129ae565b602060405180830381600087803b158015611ea157600080fd5b505af1925050508015611ed1575060408051601f3d908101601f19168201909252611ece918101906128a4565b60015b611edd57611d276128c1565b6001600160e01b0319811663f23a6e6160e01b14611bc45760405162461bcd60e51b815260040161048990612966565b6001600160a01b038116811461134657600080fd5b60008060408385031215611f3557600080fd5b8235611f4081611f0d565b946020939093013593505050565b6001600160e01b03198116811461134657600080fd5b600060208284031215611f7657600080fd5b8135611f8181611f4e565b9392505050565b6001600160a01b0391909116815260200190565b600060208284031215611fae57600080fd5b5035919050565b60005b83811015611fd0578181015183820152602001611fb8565b838111156109105750506000910152565b60008151808452611ff9816020860160208601611fb5565b601f01601f19169290920160200192915050565b602081526000611f816020830184611fe1565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b038111828210171561205b5761205b612020565b6040525050565b60006001600160401b0382111561207b5761207b612020565b5060051b60200190565b600082601f83011261209657600080fd5b813560206120a382612062565b6040516120b08282612036565b83815260059390931b85018201928281019150868411156120d057600080fd5b8286015b848110156120eb57803583529183019183016120d4565b509695505050505050565b600082601f83011261210757600080fd5b81356001600160401b0381111561212057612120612020565b604051612137601f8301601f191660200182612036565b81815284602083860101111561214c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561218157600080fd5b853561218c81611f0d565b9450602086013561219c81611f0d565b935060408601356001600160401b03808211156121b857600080fd5b6121c489838a01612085565b945060608801359150808211156121da57600080fd5b6121e689838a01612085565b935060808801359150808211156121fc57600080fd5b50612209888289016120f6565b9150509295509295909350565b6000806040838503121561222957600080fd5b82356001600160401b038082111561224057600080fd5b818501915085601f83011261225457600080fd5b8135602061226182612062565b60405161226e8282612036565b83815260059390931b850182019282810191508984111561228e57600080fd5b948201945b838610156122b55785356122a681611f0d565b82529482019490820190612293565b965050860135925050808211156122cb57600080fd5b506122d885828601612085565b9150509250929050565b600081518084526020808501945080840160005b83811015612312578151875295820195908201906001016122f6565b509495945050505050565b602081526000611f8160208301846122e2565b60008060006060848603121561234557600080fd5b505081359360208301359350604090920135919050565b801515811461134657600080fd5b6000806040838503121561237d57600080fd5b823561238881611f0d565b915060208301356123988161235c565b809150509250929050565b60008083601f8401126123b557600080fd5b5081356001600160401b038111156123cc57600080fd5b6020830191508360208260051b85010111156123e757600080fd5b9250929050565b600080600080600080600080600060c08a8c03121561240c57600080fd5b8935985060208a01356001600160401b038082111561242a57600080fd5b6124368d838e016123a3565b909a50985060408c013591508082111561244f57600080fd5b61245b8d838e016123a3565b909850965060608c013591508082111561247457600080fd5b506124818c828d016123a3565b90955093505060808a013561249581611f0d565b915060a08a01356124a581611f0d565b809150509295985092959850929598565b6000806000606084860312156124cb57600080fd5b83356124d681611f0d565b92506020840135915060408401356124ed81611f0d565b809150509250925092565b60006020828403121561250a57600080fd5b8135611f8181611f0d565b6000806040838503121561252857600080fd5b823561253381611f0d565b9150602083013561239881611f0d565b600080600080600060a0868803121561255b57600080fd5b853561256681611f0d565b9450602086013561257681611f0d565b9350604086013592506060860135915060808601356001600160401b0381111561259f57600080fd5b612209888289016120f6565b600181811c908216806125bf57607f821691505b602082108114156125e057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415612626576126266125fc565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260149082015273494e56414c4944204c4943454e5345205459504560601b604082015260600190565b6000602082840312156126a257600080fd5b5051919050565b600082198211156126bc576126bc6125fc565b500190565b6000828210156126d3576126d36125fc565b500390565b6000602082840312156126ea57600080fd5b815160ff81168114611f8157600080fd5b60006020828403121561270d57600080fd5b8151611f8181611f0d565b6000816000190483118215151615612732576127326125fc565b500290565b60008261275457634e487b7160e01b600052601260045260246000fd5b500490565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006127fb60408301856122e2565b828103602084015261183381856122e2565b6000825161281f818460208701611fb5565b9190910192915050565b60006020828403121561283b57600080fd5b8151611f818161235c565b6001600160a01b0386811682528516602082015260a060408201819052600090612872908301866122e2565b828103606084015261288481866122e2565b905082810360808401526128988185611fe1565b98975050505050505050565b6000602082840312156128b657600080fd5b8151611f8181611f4e565b600060033d11156128da5760046000803e5060005160e01c5b90565b600060443d10156128eb5790565b6040516003193d81016004833e81513d6001600160401b03808311602484018310171561291a57505050505090565b82850191508151818111156129325750505050505090565b843d870101602082850101111561294c5750505050505090565b61295b60208286010187612036565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906129e890830184611fe1565b97965050505050505056fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62a2646970667358221220c45042c5058d3eb03b19d040ebad8c99523e7ec5d1bd1ad9af9adbabc5b84b1a64736f6c6343000809003368747470733a2f2f6c6963656e73696e672d70726f746f636f6c2e76657263656c2e6170702f6170692f6c6963656e73652f7b69647da2646970667358221220fb54fe9039514100d18dc3875b5f60fd54ad66bdb5f96ab287c767b609b0e4fc64736f6c63430008090033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000ee5760003560e01c806302c6a0a514620000f35780631487c50614620001295780634626402b14620001595780636e88a7bd146200016d578063715018a6146200019557806380ed493014620001a157806389a3027114620001b85780638da5cb5b14620001e0578063a8602fea14620001ea578063af98a7391462000201578063b5811ad21462000218578063c07392701462000221578063c8b01e081462000238578063cc32d176146200024f578063d2d00c021462000264578063ec9372e9146200027b578063f2fde38b1462000284575b600080fd5b6200011662000104366004620008df565b60046020526000908152604090205481565b6040519081526020015b60405180910390f35b620001406200013a36600462000911565b6200029b565b6040516001600160a01b03909116815260200162000120565b60015462000140906001600160a01b031681565b6000546200018290600160a81b900460ff1681565b60405160ff909116815260200162000120565b6200019f620002c6565b005b62000116620001b236600462000911565b62000311565b620001407f000000000000000000000000000000000000000000000000000000000000000081565b6200014062000333565b6200019f620001fb366004620008df565b62000342565b6200019f620002123660046200092b565b62000398565b60025462000116565b6200019f6200023236600462000911565b62000413565b6200019f620002493660046200092b565b6200047c565b6000546200018290600160a01b900460ff1681565b62000140620002753660046200099e565b620004f7565b60035462000116565b6200019f62000295366004620008df565b620006cc565b60038181548110620002ac57600080fd5b6000918252602090912001546001600160a01b0316905081565b33620002d162000333565b6001600160a01b031614620003035760405162461bcd60e51b8152600401620002fa9062000a4b565b60405180910390fd5b6200030f600062000775565b565b600281815481106200032257600080fd5b600091825260209091200154905081565b6000546001600160a01b031690565b336200034d62000333565b6001600160a01b031614620003765760405162461bcd60e51b8152600401620002fa9062000a4b565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b33620003a362000333565b6001600160a01b031614620003cc5760405162461bcd60e51b8152600401620002fa9062000a4b565b600f8160ff161115620003f35760405162461bcd60e51b8152600401620002fa9062000a80565b6000805460ff909216600160a01b0260ff60a01b19909216919091179055565b336200041e62000333565b6001600160a01b031614620004475760405162461bcd60e51b8152600401620002fa9062000a4b565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0155565b336200048762000333565b6001600160a01b031614620004b05760405162461bcd60e51b8152600401620002fa9062000a4b565b600f8160ff161115620004d75760405162461bcd60e51b8152600401620002fa9062000a80565b6000805460ff909216600160a81b0260ff60a81b19909216919091179055565b600080604051806020016200050c90620008d1565b601f1982820381018352601f9091011660405290506200052f60008a83620007c5565b6001600160a01b038116600090815260046020526040902054909250156200058b5760405162461bcd60e51b815260206004820152600e60248201526d4c4943454e53452045584953545360901b6044820152606401620002fa565b60405163058b69f760e51b81526001600160a01b0383169063b16d3ee090620005e9908c908c908c908c908c908c908c9033907f00000000000000000000000000000000000000000000000000000000000000009060040162000aed565b600060405180830381600087803b1580156200060457600080fd5b505af115801562000619573d6000803e3d6000fd5b5050600380546001810182557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b03871690811790915590546000918252600460205260409182902055517f63afa380b93d772de9fcd36ce2e689f2d9c5791053ccbda8492659e9825160ac9250620006b891508b908b908b908b908b908b908b908b90339062000aed565b60405180910390a150979650505050505050565b33620006d762000333565b6001600160a01b031614620007005760405162461bcd60e51b8152600401620002fa9062000a4b565b6001600160a01b038116620007675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620002fa565b620007728162000775565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080844710156200081a5760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401620002fa565b82516200086a5760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401620002fa565b8383516020850187f590506001600160a01b038116620008c95760405162461bcd60e51b8152602060048201526019602482015278437265617465323a204661696c6564206f6e206465706c6f7960381b6044820152606401620002fa565b949350505050565b612c618062000b6083390190565b600060208284031215620008f257600080fd5b81356001600160a01b03811681146200090a57600080fd5b9392505050565b6000602082840312156200092457600080fd5b5035919050565b6000602082840312156200093e57600080fd5b813560ff811681146200090a57600080fd5b60008083601f8401126200096357600080fd5b5081356001600160401b038111156200097b57600080fd5b6020830191508360208260051b85010111156200099757600080fd5b9250929050565b60008060008060008060006080888a031215620009ba57600080fd5b8735965060208801356001600160401b0380821115620009d957600080fd5b620009e78b838c0162000950565b909850965060408a013591508082111562000a0157600080fd5b62000a0f8b838c0162000950565b909650945060608a013591508082111562000a2957600080fd5b5062000a388a828b0162000950565b989b979a50959850939692959293505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527b4645452043414e4e4f5420424520484947484552205448414e20313560201b604082015260600190565b81835260006001600160fb1b0383111562000ad057600080fd5b8260051b8083602087013760009401602001938452509192915050565b89815260c06020820152600062000b0960c083018a8c62000ab6565b828103604084015262000b1e81898b62000ab6565b9050828103606084015262000b3581878962000ab6565b6001600160a01b0395861660808501529390941660a090920191909152509897505050505050505056fe60a06040526000600d553480156200001657600080fd5b5060405180606001604052806036815260200162002c2b603691396200003c3362000057565b6200004781620000a7565b50600160045533608052620001a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051620000bc906003906020840190620000c0565b5050565b828054620000ce9062000166565b90600052602060002090601f016020900481019282620000f257600085556200013d565b82601f106200010d57805160ff19168380011785556200013d565b828001600101855582156200013d579182015b828111156200013d57825182559160200191906001019062000120565b506200014b9291506200014f565b5090565b5b808211156200014b576000815560010162000150565b600181811c908216806200017b57607f821691505b602082108114156200019d57634e487b7160e01b600052602260045260246000fd5b50919050565b608051612a49620001e26000396000818161032e0152818161081801528181610a8101528181610d9e01528181610e330152610f060152612a496000f3fe608060405234801561001057600080fd5b506004361061015e5760003560e01c8062fdd58e1461016357806301ffc9a71461018957806302d05d3f146101ac5780630e89341c146101cc57806327334b19146101ec5780632eb2c2d61461020c5780634d0ed231146102215780634e1273f4146102445780634e71d92d1461026457806354631f001461026c578063715018a61461027f57806384783cd41461028757806389a302711461029a5780638da5cb5b146102ad578063a22cb465146102b5578063a3611b71146102c8578063af38d757146102db578063b16d3ee0146102e3578063b20b3c64146102f6578063c0892d9c14610316578063c45a015514610329578063c623674f14610350578063d41a011814610359578063e64ff9371461036c578063e93a6c901461038c578063e985e9c5146103ac578063eaf1b6c9146103e8578063f242432a146103fb578063f2fde38b1461040e575b600080fd5b610176610171366004611f22565b610421565b6040519081526020015b60405180910390f35b61019c610197366004611f64565b6104ba565b6040519015158152602001610180565b6005546101bf906001600160a01b031681565b6040516101809190611f88565b6101df6101da366004611f9c565b61050c565b604051610180919061200d565b6101766101fa366004611f9c565b600a6020526000908152604090205481565b61021f61021a366004612169565b6105a0565b005b61019c61022f366004611f9c565b60086020526000908152604090205460ff1681565b610257610252366004612216565b610637565b604051610180919061231d565b61021f610760565b61021f61027a366004612330565b61076b565b61021f610916565b610176610295366004611f9c565b61094f565b6006546101bf906001600160a01b031681565b6101bf610970565b61021f6102c336600461236a565b61097f565b6101766102d6366004611f9c565b610a56565b610176610a66565b61021f6102f13660046123ee565b610a76565b610176610304366004611f9c565b60096020526000908152604090205481565b610176610324366004611f9c565b610c12565b6101bf7f000000000000000000000000000000000000000000000000000000000000000081565b61017660075481565b61021f6103673660046124b6565b610c22565b61017661037a366004611f9c565b600f6020526000908152604090205481565b61017661039a3660046124f8565b60106020526000908152604090205481565b61019c6103ba366004612515565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b61021f6103f6366004611f9c565b611180565b61021f610409366004612543565b611222565b61021f61041c3660046124f8565b6112a9565b60006001600160a01b0383166104925760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060009081526001602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806104eb57506001600160e01b031982166303a24d0760e21b145b8061050657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606003805461051b906125ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610547906125ab565b80156105945780601f1061056957610100808354040283529160200191610594565b820191906000526020600020905b81548152906001019060200180831161057757829003601f168201915b50505050509050919050565b6001600160a01b0385163314806105bc57506105bc85336103ba565b6106235760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610489565b6106308585858585611349565b5050505050565b6060815183511461069c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610489565b600083516001600160401b038111156106b7576106b7612020565b6040519080825280602002602001820160405280156106e0578160200160208202803683370190505b50905060005b84518110156107585761072b858281518110610704576107046125e6565b602002602001015185838151811061071e5761071e6125e6565b6020026020010151610421565b82828151811061073d5761073d6125e6565b602090810291909101015261075181612612565b90506106e6565b509392505050565b61076933611537565b565b33610774610970565b6001600160a01b03161461079a5760405162461bcd60e51b81526004016104899061262d565b826107b75760405162461bcd60e51b815260040161048990612662565b60008381526008602052604090205460ff16156108145760405162461bcd60e51b815260206004820152601b60248201527a4c4943454e5345205459504520414c52454144592045584953545360281b6044820152606401610489565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b5811ad26040518163ffffffff1660e01b815260040160206040518083038186803b15801561086f57600080fd5b505afa158015610883573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a79190612690565b9050808411156108c95760405162461bcd60e51b815260040161048990612662565b6000848152600860209081526040808320805460ff19166001179055600990915290208390558115610910576109008260016126a9565b6000858152600a60205260409020555b50505050565b3361091f610970565b6001600160a01b0316146109455760405162461bcd60e51b81526004016104899061262d565b61076960006116a9565b600c818154811061095f57600080fd5b600091825260209091200154905081565b6000546001600160a01b031690565b336001600160a01b03831614156109ea5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610489565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600e818154811061095f57600080fd5b6000610a71336116f9565b905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ada5760405162461bcd60e51b81526020600482015260096024820152682327a92124a22222a760b91b6044820152606401610489565b600680546001600160a01b0319166001600160a01b0383161790558487148015610b0357508683145b610b415760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890409a92a69a82a8869608b1b6044820152606401610489565b60005b87811015610bb157610b9f898983818110610b6157610b616125e6565b90506020020135888884818110610b7a57610b7a6125e6565b90506020020135878785818110610b9357610b936125e6565b9050602002013561076b565b80610ba981612612565b915050610b44565b50610bbb8961183c565b610bdf826000670de0b6b3a764000060405180602001604052806000815250611894565b610be8826112a9565b50600580546001600160a01b0319166001600160a01b039290921691909117905550505050505050565b600b818154811061095f57600080fd5b60008281526008602052604090205460ff161515600114610c555760405162461bcd60e51b815260040161048990612662565b6000828152600a602052604090205460011415610caa5760405162461bcd60e51b81526020600482015260136024820152721352539508131253525508115610d151511151606a1b6044820152606401610489565b6000828152600960205260408082205460065491516370a0823160e01b81529092916001600160a01b0316906370a0823190610cea903090600401611f88565b60206040518083038186803b158015610d0257600080fd5b505afa158015610d16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3a9190612690565b600d54909150610d4a83836126c1565b1015610d945760405162461bcd60e51b8152602060048201526019602482015278125394d551919250d251539508141056535153950814d15395603a1b6044820152606401610489565b811561105e5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cc32d1766040518163ffffffff1660e01b815260040160206040518083038186803b158015610df557600080fd5b505afa158015610e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2d91906126d8565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634626402b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e8a57600080fd5b505afa158015610e9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec291906126fb565b9050600060ff831615610f02576064610ede60ff851687612718565b610ee89190612737565b600654909150610f02906001600160a01b03168383611994565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e88a7bd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f5d57600080fd5b505afa158015610f71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9591906126d8565b60ff16905060006001600160a01b03881615801590610fb45750600082115b15610fe9576064610fc58389612718565b610fcf9190612737565b600654909150610fe9906001600160a01b03168983611994565b80610ff484896126c1565b610ffe91906126c1565b436000908152600f60205260408120805490919061101d9084906126a9565b9091555050600e8054600181018255600091909152437fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd9091015550505050505b61107a8585600160405180602001604052806000815250611894565b6000848152600a6020526040902054156110b3576000848152600a602052604081208054600192906110ad9084906126c1565b90915550505b600754604080519182526020820186905281018390527fcf26c900a2bf5c38a7a8b59e617b948b9d1ec327f0a9d372f85d9668971d5b9d9060600160405180910390a16006546040516370a0823160e01b81526001600160a01b03909116906370a0823190611126903090600401611f88565b60206040518083038186803b15801561113e57600080fd5b505afa158015611152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111769190612690565b600d555050505050565b33611189610970565b6001600160a01b0316146111af5760405162461bcd60e51b81526004016104899061262d565b6111b88161183c565b50600754600b805460018181019092557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90191909155600c80549182018155600052437fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c790910155565b6001600160a01b03851633148061123e575061123e85336103ba565b61129c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610489565b6106308585858585611abe565b336112b2610970565b6001600160a01b0316146112d85760405162461bcd60e51b81526004016104899061262d565b6001600160a01b03811661133d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610489565b611346816116a9565b50565b81518351146113ab5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610489565b6001600160a01b0384166113d15760405162461bcd60e51b815260040161048990612759565b336113e0818787878787611bcd565b60005b84518110156114c9576000858281518110611400576114006125e6565b60200260200101519050600085838151811061141e5761141e6125e6565b60209081029190910181015160008481526001835260408082206001600160a01b038e16835290935291909120549091508181101561146f5760405162461bcd60e51b81526004016104899061279e565b60008381526001602090815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906114ae9084906126a9565b92505081905550505050806114c290612612565b90506113e3565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516115199291906127e8565b60405180910390a461152f818787878787611c8d565b505050505050565b6002600454141561158a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610489565b6002600455600061159a826116f9565b9050600081116115df5760405162461bcd60e51b815260206004820152601060248201526f4e4f204645455320544f20434c41494d60801b6044820152606401610489565b6006546115f6906001600160a01b03168383611994565b6006546040516370a0823160e01b81526001600160a01b03909116906370a0823190611626903090600401611f88565b60206040518083038186803b15801561163e57600080fd5b505afa158015611652573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116769190612690565b600d556116846001436126c1565b6001600160a01b03909216600090815260106020526040902091909155506001600455565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080611707836000610421565b90506000811161174d5760405162461bcd60e51b81526020600482015260116024820152704e4f20524947485420544f20434c41494d60781b6044820152606401610489565b6000805b600e54811015611812576001600160a01b038516600090815260106020526040902054600e805483908110611788576117886125e6565b90600052602060002001541180156117bc575043600e82815481106117af576117af6125e6565b9060005260206000200154105b1561180057600f6000600e83815481106117d8576117d86125e6565b9060005260206000200154815260200190815260200160002054826117fd91906126a9565b91505b8061180a81612612565b915050611751565b50600061182783670de0b6b3a7640000612737565b90506118338183612737565b95945050505050565b8060001a60f81b6001600160f81b03191661188f5760405162461bcd60e51b8152602060048201526013602482015272121054d20810d0539393d50810914813955313606a1b6044820152606401610489565b600755565b6001600160a01b0384166118f45760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610489565b336119148160008761190588611df8565b61190e88611df8565b87611bcd565b60008481526001602090815260408083206001600160a01b0389168452909152812080548592906119469084906126a9565b909155505060408051858152602081018590526001600160a01b0380881692600092918516916000805160206129f4833981519152910160405180910390a461063081600087878787611e43565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916119f0919061280d565b6000604051808303816000865af19150503d8060008114611a2d576040519150601f19603f3d011682016040523d82523d6000602084013e611a32565b606091505b5091509150818015611a5c575080511580611a5c575080806020019051810190611a5c9190612829565b6106305760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b6064820152608401610489565b6001600160a01b038416611ae45760405162461bcd60e51b815260040161048990612759565b33611af481878761190588611df8565b60008481526001602090815260408083206001600160a01b038a16845290915290205483811015611b375760405162461bcd60e51b81526004016104899061279e565b60008581526001602090815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611b769084906126a9565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616916000805160206129f4833981519152910160405180910390a4611bc4828888888888611e43565b50505050505050565b60005b8351811015611bc457838181518110611beb57611beb6125e6565b602002602001015160001415611c7b57600e5415611c7b576000611c0e876116f9565b90508015611c1f57611c1f87611537565b6000611c2c876000610421565b1115611c54576000611c3d876116f9565b90508015611c4e57611c4e87611537565b50611c79565b611c5f6001436126c1565b6001600160a01b0387166000908152601060205260409020555b505b80611c8581612612565b915050611bd0565b6001600160a01b0384163b1561152f5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611cd19089908990889088908890600401612846565b602060405180830381600087803b158015611ceb57600080fd5b505af1925050508015611d1b575060408051601f3d908101601f19168201909252611d18918101906128a4565b60015b611dc857611d276128c1565b806308c379a01415611d615750611d3c6128dd565b80611d475750611d63565b8060405162461bcd60e51b8152600401610489919061200d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610489565b6001600160e01b0319811663bc197c8160e01b14611bc45760405162461bcd60e51b815260040161048990612966565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611e3257611e326125e6565b602090810291909101015292915050565b6001600160a01b0384163b1561152f5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611e8790899089908890889088906004016129ae565b602060405180830381600087803b158015611ea157600080fd5b505af1925050508015611ed1575060408051601f3d908101601f19168201909252611ece918101906128a4565b60015b611edd57611d276128c1565b6001600160e01b0319811663f23a6e6160e01b14611bc45760405162461bcd60e51b815260040161048990612966565b6001600160a01b038116811461134657600080fd5b60008060408385031215611f3557600080fd5b8235611f4081611f0d565b946020939093013593505050565b6001600160e01b03198116811461134657600080fd5b600060208284031215611f7657600080fd5b8135611f8181611f4e565b9392505050565b6001600160a01b0391909116815260200190565b600060208284031215611fae57600080fd5b5035919050565b60005b83811015611fd0578181015183820152602001611fb8565b838111156109105750506000910152565b60008151808452611ff9816020860160208601611fb5565b601f01601f19169290920160200192915050565b602081526000611f816020830184611fe1565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b038111828210171561205b5761205b612020565b6040525050565b60006001600160401b0382111561207b5761207b612020565b5060051b60200190565b600082601f83011261209657600080fd5b813560206120a382612062565b6040516120b08282612036565b83815260059390931b85018201928281019150868411156120d057600080fd5b8286015b848110156120eb57803583529183019183016120d4565b509695505050505050565b600082601f83011261210757600080fd5b81356001600160401b0381111561212057612120612020565b604051612137601f8301601f191660200182612036565b81815284602083860101111561214c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561218157600080fd5b853561218c81611f0d565b9450602086013561219c81611f0d565b935060408601356001600160401b03808211156121b857600080fd5b6121c489838a01612085565b945060608801359150808211156121da57600080fd5b6121e689838a01612085565b935060808801359150808211156121fc57600080fd5b50612209888289016120f6565b9150509295509295909350565b6000806040838503121561222957600080fd5b82356001600160401b038082111561224057600080fd5b818501915085601f83011261225457600080fd5b8135602061226182612062565b60405161226e8282612036565b83815260059390931b850182019282810191508984111561228e57600080fd5b948201945b838610156122b55785356122a681611f0d565b82529482019490820190612293565b965050860135925050808211156122cb57600080fd5b506122d885828601612085565b9150509250929050565b600081518084526020808501945080840160005b83811015612312578151875295820195908201906001016122f6565b509495945050505050565b602081526000611f8160208301846122e2565b60008060006060848603121561234557600080fd5b505081359360208301359350604090920135919050565b801515811461134657600080fd5b6000806040838503121561237d57600080fd5b823561238881611f0d565b915060208301356123988161235c565b809150509250929050565b60008083601f8401126123b557600080fd5b5081356001600160401b038111156123cc57600080fd5b6020830191508360208260051b85010111156123e757600080fd5b9250929050565b600080600080600080600080600060c08a8c03121561240c57600080fd5b8935985060208a01356001600160401b038082111561242a57600080fd5b6124368d838e016123a3565b909a50985060408c013591508082111561244f57600080fd5b61245b8d838e016123a3565b909850965060608c013591508082111561247457600080fd5b506124818c828d016123a3565b90955093505060808a013561249581611f0d565b915060a08a01356124a581611f0d565b809150509295985092959850929598565b6000806000606084860312156124cb57600080fd5b83356124d681611f0d565b92506020840135915060408401356124ed81611f0d565b809150509250925092565b60006020828403121561250a57600080fd5b8135611f8181611f0d565b6000806040838503121561252857600080fd5b823561253381611f0d565b9150602083013561239881611f0d565b600080600080600060a0868803121561255b57600080fd5b853561256681611f0d565b9450602086013561257681611f0d565b9350604086013592506060860135915060808601356001600160401b0381111561259f57600080fd5b612209888289016120f6565b600181811c908216806125bf57607f821691505b602082108114156125e057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415612626576126266125fc565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260149082015273494e56414c4944204c4943454e5345205459504560601b604082015260600190565b6000602082840312156126a257600080fd5b5051919050565b600082198211156126bc576126bc6125fc565b500190565b6000828210156126d3576126d36125fc565b500390565b6000602082840312156126ea57600080fd5b815160ff81168114611f8157600080fd5b60006020828403121561270d57600080fd5b8151611f8181611f0d565b6000816000190483118215151615612732576127326125fc565b500290565b60008261275457634e487b7160e01b600052601260045260246000fd5b500490565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006127fb60408301856122e2565b828103602084015261183381856122e2565b6000825161281f818460208701611fb5565b9190910192915050565b60006020828403121561283b57600080fd5b8151611f818161235c565b6001600160a01b0386811682528516602082015260a060408201819052600090612872908301866122e2565b828103606084015261288481866122e2565b905082810360808401526128988185611fe1565b98975050505050505050565b6000602082840312156128b657600080fd5b8151611f8181611f4e565b600060033d11156128da5760046000803e5060005160e01c5b90565b600060443d10156128eb5790565b6040516003193d81016004833e81513d6001600160401b03808311602484018310171561291a57505050505090565b82850191508151818111156129325750505050505090565b843d870101602082850101111561294c5750505050505090565b61295b60208286010187612036565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906129e890830184611fe1565b97965050505050505056fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62a2646970667358221220c45042c5058d3eb03b19d040ebad8c99523e7ec5d1bd1ad9af9adbabc5b84b1a64736f6c6343000809003368747470733a2f2f6c6963656e73696e672d70726f746f636f6c2e76657263656c2e6170702f6170692f6c6963656e73652f7b69647da2646970667358221220fb54fe9039514100d18dc3875b5f60fd54ad66bdb5f96ab287c767b609b0e4fc64736f6c63430008090033",
  "immutableReferences": {
    "58": [
      {
        "length": 32,
        "start": 446
      },
      {
        "length": 32,
        "start": 1472
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:21",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:21",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:21"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:21",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:21",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:21"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:21",
                "type": ""
              }
            ],
            "src": "14:290:21"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7169:21",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:21",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:21"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:21",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:21",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:21"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:21",
                "type": ""
              }
            ],
            "src": "14:286:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "406:76:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "416:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "428:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "439:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "424:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "416:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "458:9:21"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "469:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "451:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:25:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "451:25:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "375:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "386:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "397:4:21",
                "type": ""
              }
            ],
            "src": "305:177:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "557:110:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "603:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "612:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "615:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "605:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "605:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "605:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "578:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "587:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "574:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "574:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "599:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "570:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "570:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "567:52:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "628:33:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "651:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "638:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "638:23:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "628:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "523:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "534:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "546:6:21",
                "type": ""
              }
            ],
            "src": "487:180:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "773:102:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "783:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "795:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "806:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "791:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "791:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "783:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "825:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "840:6:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "856:3:21",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "861:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "852:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "852:11:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "865:1:21",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "848:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "848:19:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "836:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "836:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "818:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "818:51:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "818:51:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "742:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "753:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "764:4:21",
                "type": ""
              }
            ],
            "src": "672:203:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "977:87:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "987:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "999:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1010:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "995:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "995:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "987:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1029:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1044:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1052:4:21",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1040:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1040:17:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1022:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1022:36:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1022:36:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "946:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "957:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "968:4:21",
                "type": ""
              }
            ],
            "src": "880:184:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1170:76:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1180:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1192:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1203:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1188:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1188:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1180:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1222:9:21"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1233:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1215:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:25:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1215:25:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1139:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1150:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1161:4:21",
                "type": ""
              }
            ],
            "src": "1069:177:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1319:201:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1365:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1374:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1377:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1367:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1367:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1367:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1340:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1349:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1336:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1336:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1361:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1332:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1329:52:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1390:36:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1416:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1403:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1403:23:21"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1394:5:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1474:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1483:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1486:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1476:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1476:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1476:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1448:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1459:5:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1466:4:21",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1455:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1455:16:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1445:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1445:27:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1438:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1438:35:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1435:55:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1499:15:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1509:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1499:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1285:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1296:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1308:6:21",
                "type": ""
              }
            ],
            "src": "1251:269:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1595:110:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1641:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1650:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1653:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1643:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1643:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1643:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1616:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1625:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1612:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1612:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1637:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1608:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1608:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1605:52:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1666:33:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1689:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1676:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1676:23:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1666:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1561:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1572:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1584:6:21",
                "type": ""
              }
            ],
            "src": "1525:180:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1794:283:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1843:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1852:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1855:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1845:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1845:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1845:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1822:6:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1830:4:21",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1818:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1818:17:21"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1837:3:21"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1814:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1814:27:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1807:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1807:35:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1804:55:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1868:30:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1891:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1878:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1878:20:21"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1868:6:21"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1941:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1950:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1953:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1943:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1943:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1943:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1913:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1929:2:21",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1933:1:21",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1925:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1925:10:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1937:1:21",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1921:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1921:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1910:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1910:30:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1907:50:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1966:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1982:6:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1990:4:21",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1978:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1978:17:21"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "1966:8:21"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2055:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2064:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2067:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2057:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2057:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2057:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2018:6:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2030:1:21",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2033:6:21"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2026:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2026:14:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2014:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2014:27:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2043:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2010:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2010:38:21"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2050:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2007:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2007:47:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2004:67:21"
                }
              ]
            },
            "name": "abi_decode_array_uint256_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1757:6:21",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1765:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "1773:8:21",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1783:6:21",
                "type": ""
              }
            ],
            "src": "1710:367:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2308:931:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2355:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2364:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2367:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2357:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2357:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2357:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2329:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2338:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2325:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2325:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2350:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2321:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2321:33:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2318:53:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2380:33:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2403:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2390:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2390:23:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2380:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2422:46:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2453:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2464:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2449:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2449:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2436:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2436:32:21"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2426:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2477:28:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2495:2:21",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2499:1:21",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2491:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2491:10:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2503:1:21",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2487:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2487:18:21"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2481:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2532:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2541:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2544:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2534:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2534:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2534:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2520:6:21"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2528:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2517:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2517:14:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2514:34:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2557:96:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2625:9:21"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2636:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2621:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2621:22:21"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2645:7:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_uint256_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2583:37:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2583:70:21"
                  },
                  "variables": [
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "2561:8:21",
                      "type": ""
                    },
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "2571:8:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2662:18:21",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "2672:8:21"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2662:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2689:18:21",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "2699:8:21"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2689:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2716:48:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2749:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2760:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2745:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2745:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2732:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2732:32:21"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2720:8:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2793:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2802:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2805:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2795:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2795:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2795:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2779:8:21"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2789:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2776:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2776:16:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2773:36:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2818:98:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2886:9:21"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2897:8:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2882:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2882:24:21"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2908:7:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_uint256_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2844:37:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2844:72:21"
                  },
                  "variables": [
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "2822:8:21",
                      "type": ""
                    },
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "2832:8:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2925:18:21",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "2935:8:21"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2925:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2952:18:21",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "2962:8:21"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2952:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2979:48:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3012:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3023:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3008:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3008:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2995:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2995:32:21"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "2983:8:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3056:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3065:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3068:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3058:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3058:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3058:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "3042:8:21"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3052:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3039:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3039:16:21"
                  },
                  "nodeType": "YulIf",
                  "src": "3036:36:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3081:98:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3149:9:21"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "3160:8:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3145:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3145:24:21"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3171:7:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_uint256_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "3107:37:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3107:72:21"
                  },
                  "variables": [
                    {
                      "name": "value5_1",
                      "nodeType": "YulTypedName",
                      "src": "3085:8:21",
                      "type": ""
                    },
                    {
                      "name": "value6_1",
                      "nodeType": "YulTypedName",
                      "src": "3095:8:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3188:18:21",
                  "value": {
                    "name": "value5_1",
                    "nodeType": "YulIdentifier",
                    "src": "3198:8:21"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "3188:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3215:18:21",
                  "value": {
                    "name": "value6_1",
                    "nodeType": "YulIdentifier",
                    "src": "3225:8:21"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "3215:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2226:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2237:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2249:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2257:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2265:6:21",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2273:6:21",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2281:6:21",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "2289:6:21",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "2297:6:21",
                "type": ""
              }
            ],
            "src": "2082:1157:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3418:182:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3435:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3446:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3428:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3428:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3428:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3469:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3480:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3465:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3465:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3485:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3458:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3458:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3458:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3508:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3519:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3504:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3504:18:21"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3524:34:21",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3497:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3497:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3497:62:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3568:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3580:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3591:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3576:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3576:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3568:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3395:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3409:4:21",
                "type": ""
              }
            ],
            "src": "3244:356:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3779:178:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3796:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3807:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3789:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3789:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3789:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3830:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3841:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3826:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3826:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3846:2:21",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3819:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3819:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3819:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3869:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3880:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3865:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3865:18:21"
                      },
                      {
                        "hexValue": "4645452043414e4e4f5420424520484947484552205448414e203135",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3885:30:21",
                        "type": "",
                        "value": "FEE CANNOT BE HIGHER THAN 15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3858:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3858:58:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3858:58:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3925:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3937:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3948:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3933:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3933:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3925:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_dc13becab2439c54d5cef4ad5737efb6b6d2f8a984841803c3176f9f81d25f96__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3756:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3770:4:21",
                "type": ""
              }
            ],
            "src": "3605:352:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4136:164:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4153:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4164:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4146:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4146:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4146:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4187:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4198:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4183:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4183:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4203:2:21",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4176:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4176:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4176:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4226:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4237:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4222:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4222:18:21"
                      },
                      {
                        "hexValue": "4c4943454e534520455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4242:16:21",
                        "type": "",
                        "value": "LICENSE EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4215:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4215:44:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4215:44:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4268:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4280:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4291:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4276:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4276:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4268:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ef169b8375f3054755fe4e0914e6c09703f3e40b38ba210ddaf686122b20e258__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4113:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4127:4:21",
                "type": ""
              }
            ],
            "src": "3962:338:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4383:276:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4400:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4405:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4393:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4393:19:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4393:19:21"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4456:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4465:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4468:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4458:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4458:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4458:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4427:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4443:3:21",
                                "type": "",
                                "value": "251"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4448:1:21",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4439:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4439:11:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4452:1:21",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4435:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4435:19:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4424:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4424:31:21"
                  },
                  "nodeType": "YulIf",
                  "src": "4421:51:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4481:30:21",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4501:1:21",
                        "type": "",
                        "value": "5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4504:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "4497:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4497:14:21"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "4485:8:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4537:3:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4542:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4533:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4533:14:21"
                      },
                      {
                        "name": "start",
                        "nodeType": "YulIdentifier",
                        "src": "4549:5:21"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "4556:8:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "4520:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4520:45:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4520:45:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4574:39:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4592:3:21"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "4597:8:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4588:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4588:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4608:4:21",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4584:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4584:29:21"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4578:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4629:2:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4633:1:21",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4622:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4622:13:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4622:13:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4644:9:21",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "4651:2:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4644:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_array_uint256_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "start",
                "nodeType": "YulTypedName",
                "src": "4352:5:21",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4359:6:21",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4367:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4375:3:21",
                "type": ""
              }
            ],
            "src": "4305:354:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5085:602:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5102:9:21"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5113:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5095:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5095:25:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5095:25:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5140:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5151:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5136:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5136:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5156:3:21",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5129:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5129:31:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5129:31:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5169:88:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5221:6:21"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5229:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5241:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5252:3:21",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5237:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5237:19:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_uint256_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5183:37:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5183:74:21"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "5173:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5277:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5288:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5273:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5273:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "5297:6:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5305:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5293:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5293:22:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5266:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5266:50:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5266:50:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5325:75:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5377:6:21"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "5385:6:21"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "5393:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_uint256_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5339:37:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5339:61:21"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "5329:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5420:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5431:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5416:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5416:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "5440:6:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5448:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5436:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5436:22:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5409:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5409:50:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5409:50:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5468:69:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "5514:6:21"
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "5522:6:21"
                      },
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "5530:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_uint256_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5476:37:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5476:61:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5468:4:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5546:29:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5564:3:21",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5569:1:21",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5560:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5560:11:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5573:1:21",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5556:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5556:19:21"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5550:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5595:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5606:3:21",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5591:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5591:19:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value7",
                            "nodeType": "YulIdentifier",
                            "src": "5616:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5624:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5612:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5612:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5584:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5584:44:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5584:44:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5648:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5659:3:21",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5644:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5644:19:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value8",
                            "nodeType": "YulIdentifier",
                            "src": "5669:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5677:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5665:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5665:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5637:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5637:44:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5637:44:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_address_t_address__to_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4990:9:21",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "5001:6:21",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "5009:6:21",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "5017:6:21",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "5025:6:21",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5033:6:21",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5041:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5049:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5057:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5065:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5076:4:21",
                "type": ""
              }
            ],
            "src": "4664:1023:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5866:228:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5883:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5894:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5876:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5876:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5876:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5917:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5928:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5913:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5913:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5933:2:21",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5906:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5906:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5906:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5956:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5967:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5952:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5952:18:21"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5972:34:21",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5945:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5945:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5945:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6027:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6038:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6023:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6023:18:21"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6043:8:21",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6016:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6016:36:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6016:36:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6061:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6073:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6084:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6069:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6069:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6061:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5843:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5857:4:21",
                "type": ""
              }
            ],
            "src": "5692:402:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6273:179:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6290:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6301:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6283:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6283:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6283:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6324:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6335:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6320:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6320:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6340:2:21",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6313:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6313:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6313:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6363:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6374:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6359:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6359:18:21"
                      },
                      {
                        "hexValue": "437265617465323a20696e73756666696369656e742062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6379:31:21",
                        "type": "",
                        "value": "Create2: insufficient balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6352:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6352:59:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6352:59:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6420:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6432:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6443:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6428:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6428:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6420:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6250:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6264:4:21",
                "type": ""
              }
            ],
            "src": "6099:353:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6631:182:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6648:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6659:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6641:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6641:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6641:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6682:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6693:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6678:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6678:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6698:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6671:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6671:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6671:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6721:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6732:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6717:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6717:18:21"
                      },
                      {
                        "hexValue": "437265617465323a2062797465636f6465206c656e677468206973207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6737:34:21",
                        "type": "",
                        "value": "Create2: bytecode length is zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6710:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6710:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6710:62:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6781:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6793:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6804:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6789:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6789:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6781:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6608:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6622:4:21",
                "type": ""
              }
            ],
            "src": "6457:356:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6992:175:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7009:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7020:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7002:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7002:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7002:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7043:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7054:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7039:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7039:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7059:2:21",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7032:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7032:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7032:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7082:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7093:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7078:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7078:18:21"
                      },
                      {
                        "hexValue": "437265617465323a204661696c6564206f6e206465706c6f79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7098:27:21",
                        "type": "",
                        "value": "Create2: Failed on deploy"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7071:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7071:55:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7071:55:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7135:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7147:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7158:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7143:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7143:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7135:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6969:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6983:4:21",
                "type": ""
              }
            ],
            "src": "6818:349:21"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_array_uint256_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset_2), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dc13becab2439c54d5cef4ad5737efb6b6d2f8a984841803c3176f9f81d25f96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"FEE CANNOT BE HIGHER THAN 15\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ef169b8375f3054755fe4e0914e6c09703f3e40b38ba210ddaf686122b20e258__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"LICENSE EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_array_uint256_dyn_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        if gt(length, sub(shl(251, 1), 1)) { revert(0, 0) }\n        let length_1 := shl(5, length)\n        calldatacopy(add(pos, 0x20), start, length_1)\n        let _1 := add(add(pos, length_1), 0x20)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_bytes32_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_address_t_address__to_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address_t_address__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 192)\n        let tail_1 := abi_encode_array_uint256_dyn_calldata(value1, value2, add(headStart, 192))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn_calldata(value3, value4, tail_1)\n        mstore(add(headStart, 96), sub(tail_2, headStart))\n        tail := abi_encode_array_uint256_dyn_calldata(value5, value6, tail_2)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 128), and(value7, _1))\n        mstore(add(headStart, 160), and(value8, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Create2: insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Create2: bytecode length is zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Create2: Failed on deploy\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "273:3222:1:-:0;;;522:29;;;-1:-1:-1;;;;557:29:1;-1:-1:-1;;;557:29:1;;;713:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:6;665:10:16;867:9:6;:23::i;:::-;750:14:1;:27;;-1:-1:-1;;;;;;750:27:1;767:10;750:27;;;-1:-1:-1;;;;;787:12:1;;;273:3222;;2041:169:6;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:6;;;-1:-1:-1;;;;;;2131:17:6;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:290:21:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:21;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:21:o;:::-;273:3222:1;;;;;;;;;;",
  "deployedSourceMap": "273:3222:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;891:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;451:25:21;;;439:2;424:18;891:50:1;;;;;;;;857:28;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;836:32:21;;;818:51;;806:2;791:18;857:28:1;672:203:21;593:29:1;;;;;-1:-1:-1;;;;;593:29:1;;;557;;;;;-1:-1:-1;;;557:29:1;;;;;;;;;1052:4:21;1040:17;;;1022:36;;1010:2;995:18;557:29:1;880:184:21;1605:92:6;;;:::i;:::-;;812:38:1;;;;;;:::i;:::-;;:::i;628:29::-;;;;;973:85:6;;;:::i;3172:120:1:-;;;;;;:::i;:::-;;:::i;2710:225::-;;;;;;:::i;:::-;;:::i;948:123::-;1036:21;:28;948:123;;3379:114;;;;;;:::i;:::-;;:::i;2941:225::-;;;;;;:::i;:::-;;:::i;522:29::-;;;;;-1:-1:-1;;;522:29:1;;;;;;1579:1125;;;;;;:::i;:::-;;:::i;1077:103::-;1155:11;:18;1077:103;;1846:189:6;;;;;;:::i;:::-;;:::i;857:28:1:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;857:28:1;;-1:-1:-1;857:28:1;:::o;1605:92:6:-;665:10:16;1185:7:6;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:6;;1177:68;;;;-1:-1:-1;;;1177:68:6;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;812:38:1:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;812:38:1;:::o;973:85:6:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:6;;973:85::o;3172:120:1:-;665:10:16;1185:7:6;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:6;;1177:68;;;;-1:-1:-1;;;1177:68:6;;;;;;;:::i;:::-;3253:14:1::1;:32:::0;;-1:-1:-1;;;;;;3253:32:1::1;-1:-1:-1::0;;;;;3253:32:1;;;::::1;::::0;;;::::1;::::0;;3172:120::o;2710:225::-;665:10:16;1185:7:6;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:6;;1177:68;;;;-1:-1:-1;;;1177:68:6;;;;;;;:::i;:::-;2857:2:1::1;2841:12;:18;;;;2833:59;;;;-1:-1:-1::0;;;2833:59:1::1;;;;;;;:::i;:::-;2902:11;:26:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;2902:26:1::1;-1:-1:-1::0;;;;2902:26:1;;::::1;::::0;;;::::1;::::0;;2710:225::o;3379:114::-;665:10:16;1185:7:6;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:6;;1177:68;;;;-1:-1:-1;;;1177:68:6;;;;;;;:::i;:::-;3450:21:1::1;:36:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3450:36:1;;;;;::::1;::::0;3379:114::o;2941:225::-;665:10:16;1185:7:6;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:6;;1177:68;;;;-1:-1:-1;;;1177:68:6;;;;;;;:::i;:::-;3088:2:1::1;3072:12;:18;;;;3064:59;;;;-1:-1:-1::0;;;3064:59:1::1;;;;;;;:::i;:::-;3133:11;:26:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;3133:26:1::1;-1:-1:-1::0;;;;3133:26:1;;::::1;::::0;;;::::1;::::0;;2941:225::o;1579:1125::-;1777:23;1850:21;1874:26;;;;;;;;:::i;:::-;-1:-1:-1;;1874:26:1;;;;;;;;;;;;;;;-1:-1:-1;1928:37:1;1943:1;1946:8;1874:26;1928:14;:37::i;:::-;-1:-1:-1;;;;;2063:32:1;;;;;;:15;:32;;;;;;1910:55;;-1:-1:-1;2063:37:1;2055:64;;;;-1:-1:-1;;;2055:64:1;;4164:2:21;2055:64:1;;;4146:21:21;4203:2;4183:18;;;4176:30;-1:-1:-1;;;4222:18:21;;;4215:44;4276:18;;2055:64:1;3962:338:21;2055:64:1;2129:190;;-1:-1:-1;;;2129:190:1;;-1:-1:-1;;;;;2129:36:1;;;;;:190;;2179:8;;2201:12;;;;2227:13;;;;2254;;;;2281:10;;2305:4;;2129:190;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2375:11:1;:33;;;;;;;;;;;-1:-1:-1;;;;;;2375:33:1;-1:-1:-1;;;;;2375:33:1;;;;;;;;2453:18;;-1:-1:-1;2418:32:1;;;:15;2375:33;2418:32;;;;;;:53;2486:179;;;-1:-1:-1;2486:179:1;;-1:-1:-1;2514:8:1;;2536:12;;;;2562:13;;;;2589;;;;2375:33;;2645:10;;2486:179;:::i;:::-;;;;;;;;2675:22;1579:1125;;;;;;;;;:::o;1846:189:6:-;665:10:16;1185:7:6;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:6;;1177:68;;;;-1:-1:-1;;;1177:68:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:6;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:6;;5894:2:21;1926:73:6::1;::::0;::::1;5876:21:21::0;5933:2;5913:18;;;5906:30;5972:34;5952:18;;;5945:62;-1:-1:-1;;;6023:18:21;;;6016:36;6069:19;;1926:73:6::1;5692:402:21::0;1926:73:6::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;2041:169::-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:6;;;-1:-1:-1;;;;;;2131:17:6;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;1013:509:17:-;1130:7;1149:12;1204:6;1179:21;:31;;1171:73;;;;-1:-1:-1;;;1171:73:17;;6301:2:21;1171:73:17;;;6283:21:21;6340:2;6320:18;;;6313:30;6379:31;6359:18;;;6352:59;6428:18;;1171:73:17;6099:353:21;1171:73:17;1262:15;;1254:65;;;;-1:-1:-1;;;1254:65:17;;6659:2:21;1254:65:17;;;6641:21:21;;;6678:18;;;6671:30;6737:34;6717:18;;;6710:62;6789:18;;1254:65:17;6457:356:21;1254:65:17;1414:4;1403:8;1397:15;1390:4;1380:8;1376:19;1368:6;1360:59;1352:67;-1:-1:-1;;;;;;1446:18:17;;1438:56;;;;-1:-1:-1;;;1438:56:17;;7020:2:21;1438:56:17;;;7002:21:21;7059:2;7039:18;;;7032:30;-1:-1:-1;;;7078:18:21;;;7071:55;7143:18;;1438:56:17;6818:349:21;1438:56:17;1511:4;1013:509;-1:-1:-1;;;;1013:509:17:o;-1:-1:-1:-;;;;;;;;:::o;14:286:21:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:21;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:21:o;487:180::-;546:6;599:2;587:9;578:7;574:23;570:32;567:52;;;615:1;612;605:12;567:52;-1:-1:-1;638:23:21;;487:180;-1:-1:-1;487:180:21:o;1251:269::-;1308:6;1361:2;1349:9;1340:7;1336:23;1332:32;1329:52;;;1377:1;1374;1367:12;1329:52;1416:9;1403:23;1466:4;1459:5;1455:16;1448:5;1445:27;1435:55;;1486:1;1483;1476:12;1710:367;1773:8;1783:6;1837:3;1830:4;1822:6;1818:17;1814:27;1804:55;;1855:1;1852;1845:12;1804:55;-1:-1:-1;1878:20:21;;-1:-1:-1;;;;;1910:30:21;;1907:50;;;1953:1;1950;1943:12;1907:50;1990:4;1982:6;1978:17;1966:29;;2050:3;2043:4;2033:6;2030:1;2026:14;2018:6;2014:27;2010:38;2007:47;2004:67;;;2067:1;2064;2057:12;2004:67;1710:367;;;;;:::o;2082:1157::-;2249:6;2257;2265;2273;2281;2289;2297;2350:3;2338:9;2329:7;2325:23;2321:33;2318:53;;;2367:1;2364;2357:12;2318:53;2390:23;;;-1:-1:-1;2464:2:21;2449:18;;2436:32;-1:-1:-1;;;;;2517:14:21;;;2514:34;;;2544:1;2541;2534:12;2514:34;2583:70;2645:7;2636:6;2625:9;2621:22;2583:70;:::i;:::-;2672:8;;-1:-1:-1;2557:96:21;-1:-1:-1;2760:2:21;2745:18;;2732:32;;-1:-1:-1;2776:16:21;;;2773:36;;;2805:1;2802;2795:12;2773:36;2844:72;2908:7;2897:8;2886:9;2882:24;2844:72;:::i;:::-;2935:8;;-1:-1:-1;2818:98:21;-1:-1:-1;3023:2:21;3008:18;;2995:32;;-1:-1:-1;3039:16:21;;;3036:36;;;3068:1;3065;3058:12;3036:36;;3107:72;3171:7;3160:8;3149:9;3145:24;3107:72;:::i;:::-;2082:1157;;;;-1:-1:-1;2082:1157:21;;-1:-1:-1;2082:1157:21;;;;3081:98;;-1:-1:-1;;;2082:1157:21:o;3244:356::-;3446:2;3428:21;;;3465:18;;;3458:30;3524:34;3519:2;3504:18;;3497:62;3591:2;3576:18;;3244:356::o;3605:352::-;3807:2;3789:21;;;3846:2;3826:18;;;3819:30;-1:-1:-1;;;3880:2:21;3865:18;;3858:58;3948:2;3933:18;;3605:352::o;4305:354::-;4393:19;;;4375:3;-1:-1:-1;;;;;4424:31:21;;4421:51;;;4468:1;4465;4458:12;4421:51;4504:6;4501:1;4497:14;4556:8;4549:5;4542:4;4537:3;4533:14;4520:45;4633:1;4588:18;;4608:4;4584:29;4622:13;;;-1:-1:-1;4584:29:21;;4305:354;-1:-1:-1;;4305:354:21:o;4664:1023::-;5113:6;5102:9;5095:25;5156:3;5151:2;5140:9;5136:18;5129:31;5076:4;5183:74;5252:3;5241:9;5237:19;5229:6;5221;5183:74;:::i;:::-;5305:9;5297:6;5293:22;5288:2;5277:9;5273:18;5266:50;5339:61;5393:6;5385;5377;5339:61;:::i;:::-;5325:75;;5448:9;5440:6;5436:22;5431:2;5420:9;5416:18;5409:50;5476:61;5530:6;5522;5514;5476:61;:::i;:::-;-1:-1:-1;;;;;5612:15:21;;;5606:3;5591:19;;5584:44;5665:15;;;;5564:3;5644:19;;;5637:44;;;;-1:-1:-1;5665:15:21;5468:69;-1:-1:-1;;;;;;;;4664:1023:21:o",
  "source": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.8.0;\n\nimport '@openzeppelin/contracts/utils/Create2.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\nimport './License.sol';\nimport './interfaces/ILicense.sol';\n\n// @author Julian Peters\n// @title Factory\ncontract Factory is Ownable {\n    event LicenseCreated(\n        bytes32 ipfsHash,\n        uint256[] licenseTypes,\n        uint256[] licensePrices,\n        uint256[] licenseSupply,\n        address licenseContract,\n        address creator\n    );\n\n    uint8 public treasuryFee = 10;\n    uint8 public referrerFee = 10;\n\n    address public treasuryWallet;\n    address public immutable USDC;\n\n    // @param _USDC Address of the USDC contract\n    constructor(address _USDC) {\n        treasuryWallet = msg.sender;\n        USDC = _USDC;\n    }\n\n    bytes32[] public availableLicenseTypes;\n\n    address[] public allLicenses;\n    mapping(address => uint256) public licensePosition;\n\n    function availableLicenseTypesLength() external view returns (uint256) {\n        return availableLicenseTypes.length;\n    }\n\n    function allLicensesLength() external view returns (uint256) {\n        return allLicenses.length;\n    }\n\n    // @dev Create new Licene.sol smart contract\n    // @param ipfsHash - IPFS hash of the content to license\n    // @param licenseTypes - array of available license types\n    // @param licensePrices - array of license prices in USDC for each license type\n    // @param licenseSupply - array of max. available amount of each license type\n    // @return Address of the created license contract\n    function createLicense(\n        bytes32 ipfsHash,\n        uint256[] calldata licenseTypes,\n        uint256[] calldata licensePrices,\n        uint256[] calldata licenseSupply\n    ) external returns (address licenseContract) {\n        // @dev Deterministic address\n        bytes memory bytecode = type(License).creationCode;\n        licenseContract = Create2.deploy(0, ipfsHash, bytecode);\n        // @dev Require that license with identical ipfsHash does not exist yet\n        require(licensePosition[licenseContract] == 0, 'LICENSE EXISTS');\n        ILicense(licenseContract).initialize(\n            ipfsHash,\n            licenseTypes,\n            licensePrices,\n            licenseSupply,\n            msg.sender,\n            USDC\n        );\n        // @dev Save license contract address\n        allLicenses.push(licenseContract);\n        licensePosition[licenseContract] = allLicenses.length;\n        emit LicenseCreated(\n            ipfsHash,\n            licenseTypes,\n            licensePrices,\n            licenseSupply,\n            licenseContract,\n            msg.sender\n        );\n        return licenseContract;\n    }\n\n    function setTreasuryFee(uint8 _treasuryFee) external onlyOwner {\n        // @notice Fee can be set to a max. of 15\n        require(_treasuryFee <= 15, 'FEE CANNOT BE HIGHER THAN 15');\n        treasuryFee = _treasuryFee;\n    }\n\n    function setReferrerFee(uint8 _referrerFee) external onlyOwner {\n        // @notice Fee can be set to a max. of 15\n        require(_referrerFee <= 15, 'FEE CANNOT BE HIGHER THAN 15');\n        referrerFee = _referrerFee;\n    }\n\n    function setTreasuryWallet(address _treasuryWallet) external onlyOwner {\n        treasuryWallet = _treasuryWallet;\n    }\n\n    // @param ipfsHash IPFS hash with the content of the standard license to add\n    function addLicenseType(bytes32 ipfsHash) external onlyOwner {\n        availableLicenseTypes.push(ipfsHash);\n    }\n}\n",
  "sourcePath": "/Users/jp/Documents/GitHub/learn-truffle/contracts/Factory.sol",
  "ast": {
    "absolutePath": "/Users/jp/Documents/GitHub/learn-truffle/contracts/Factory.sol",
    "exportedSymbols": {
      "Address": [
        3495
      ],
      "Context": [
        3516
      ],
      "Create2": [
        3627
      ],
      "ERC1155": [
        2372
      ],
      "ERC165": [
        3651
      ],
      "Factory": [
        246
      ],
      "IERC1155": [
        2494
      ],
      "IERC1155MetadataURI": [
        2550
      ],
      "IERC1155Receiver": [
        2535
      ],
      "IERC165": [
        3663
      ],
      "IERC20": [
        3174
      ],
      "ILicense": [
        1143
      ],
      "License": [
        968
      ],
      "Ownable": [
        1247
      ],
      "ReentrancyGuard": [
        1287
      ],
      "TransferHelper": [
        3823
      ]
    },
    "id": 247,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 25,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
        "file": "@openzeppelin/contracts/utils/Create2.sol",
        "id": 26,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 247,
        "sourceUnit": 3628,
        "src": "63:51:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 27,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 247,
        "sourceUnit": 1248,
        "src": "115:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jp/Documents/GitHub/learn-truffle/contracts/License.sol",
        "file": "./License.sol",
        "id": 28,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 247,
        "sourceUnit": 969,
        "src": "169:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jp/Documents/GitHub/learn-truffle/contracts/interfaces/ILicense.sol",
        "file": "./interfaces/ILicense.sol",
        "id": 29,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 247,
        "sourceUnit": 1144,
        "src": "193:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1247,
              "src": "293:7:1"
            },
            "id": 31,
            "nodeType": "InheritanceSpecifier",
            "src": "293:7:1"
          }
        ],
        "canonicalName": "Factory",
        "contractDependencies": [
          968
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 246,
        "linearizedBaseContracts": [
          246,
          1247,
          3516
        ],
        "name": "Factory",
        "nameLocation": "282:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 48,
            "name": "LicenseCreated",
            "nameLocation": "313:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ipfsHash",
                  "nameLocation": "345:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "337:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "licenseTypes",
                  "nameLocation": "373:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "363:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "363:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 35,
                    "nodeType": "ArrayTypeName",
                    "src": "363:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "licensePrices",
                  "nameLocation": "405:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "395:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "395:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38,
                    "nodeType": "ArrayTypeName",
                    "src": "395:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "licenseSupply",
                  "nameLocation": "438:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "428:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "428:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41,
                    "nodeType": "ArrayTypeName",
                    "src": "428:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "licenseContract",
                  "nameLocation": "469:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "461:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "502:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "494:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "327:188:1"
            },
            "src": "307:209:1"
          },
          {
            "constant": false,
            "functionSelector": "cc32d176",
            "id": 51,
            "mutability": "mutable",
            "name": "treasuryFee",
            "nameLocation": "535:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 246,
            "src": "522:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 49,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "522:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 50,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "549:2:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e88a7bd",
            "id": 54,
            "mutability": "mutable",
            "name": "referrerFee",
            "nameLocation": "570:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 246,
            "src": "557:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 52,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "557:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "584:2:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4626402b",
            "id": 56,
            "mutability": "mutable",
            "name": "treasuryWallet",
            "nameLocation": "608:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 246,
            "src": "593:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 55,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "593:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89a30271",
            "id": 58,
            "mutability": "immutable",
            "name": "USDC",
            "nameLocation": "653:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 246,
            "src": "628:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 57,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "628:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "740:66:1",
              "statements": [
                {
                  "expression": {
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "treasuryWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "750:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 64,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "767:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "767:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "750:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "750:27:1"
                },
                {
                  "expression": {
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68,
                      "name": "USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "787:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 69,
                      "name": "_USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "794:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "787:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "787:12:1"
                }
              ]
            },
            "id": 73,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "_USDC",
                  "nameLocation": "733:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "725:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "725:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "724:15:1"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "740:0:1"
            },
            "scope": 246,
            "src": "713:93:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "80ed4930",
            "id": 76,
            "mutability": "mutable",
            "name": "availableLicenseTypes",
            "nameLocation": "829:21:1",
            "nodeType": "VariableDeclaration",
            "scope": 246,
            "src": "812:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 74,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "812:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 75,
              "nodeType": "ArrayTypeName",
              "src": "812:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1487c506",
            "id": 79,
            "mutability": "mutable",
            "name": "allLicenses",
            "nameLocation": "874:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 246,
            "src": "857:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 77,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "857:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 78,
              "nodeType": "ArrayTypeName",
              "src": "857:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "02c6a0a5",
            "id": 83,
            "mutability": "mutable",
            "name": "licensePosition",
            "nameLocation": "926:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 246,
            "src": "891:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 82,
              "keyType": {
                "id": 80,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "899:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "891:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 81,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "910:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1019:52:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 88,
                      "name": "availableLicenseTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "1036:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1036:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87,
                  "id": 90,
                  "nodeType": "Return",
                  "src": "1029:35:1"
                }
              ]
            },
            "functionSelector": "b5811ad2",
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableLicenseTypesLength",
            "nameLocation": "957:27:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "984:2:1"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1010:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1009:9:1"
            },
            "scope": 246,
            "src": "948:123:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1138:42:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 97,
                      "name": "allLicenses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1155:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1155:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 96,
                  "id": 99,
                  "nodeType": "Return",
                  "src": "1148:25:1"
                }
              ]
            },
            "functionSelector": "ec9372e9",
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allLicensesLength",
            "nameLocation": "1086:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1103:2:1"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1129:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1128:9:1"
            },
            "scope": 246,
            "src": "1077:103:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "1802:902:1",
              "statements": [
                {
                  "assignments": [
                    118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 118,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1863:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "1850:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1850:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 123,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 120,
                          "name": "License",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 968,
                          "src": "1879:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_License_$968_$",
                            "typeString": "type(contract License)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_License_$968_$",
                            "typeString": "type(contract License)"
                          }
                        ],
                        "id": 119,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1874:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1874:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_License_$968",
                        "typeString": "type(contract License)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1874:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1850:50:1"
                },
                {
                  "expression": {
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "licenseContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "1910:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1943:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 128,
                          "name": "ipfsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "1946:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 129,
                          "name": "bytecode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "1956:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 125,
                          "name": "Create2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3627,
                          "src": "1928:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Create2_$3627_$",
                            "typeString": "type(library Create2)"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deploy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3567,
                        "src": "1928:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (uint256,bytes32,bytes memory) returns (address)"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1928:37:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1910:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1910:55:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 134,
                            "name": "licensePosition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "2063:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 136,
                          "indexExpression": {
                            "id": 135,
                            "name": "licenseContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "2079:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2063:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2099:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2063:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c4943454e534520455849535453",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2102:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef169b8375f3054755fe4e0914e6c09703f3e40b38ba210ddaf686122b20e258",
                          "typeString": "literal_string \"LICENSE EXISTS\""
                        },
                        "value": "LICENSE EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef169b8375f3054755fe4e0914e6c09703f3e40b38ba210ddaf686122b20e258",
                          "typeString": "literal_string \"LICENSE EXISTS\""
                        }
                      ],
                      "id": 133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2055:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2055:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2055:64:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 146,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "2179:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 147,
                        "name": "licenseTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "2201:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 148,
                        "name": "licensePrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "2227:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 149,
                        "name": "licenseSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2254:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2281:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2281:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 152,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2305:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 143,
                            "name": "licenseContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "2138:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 142,
                          "name": "ILicense",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1143,
                          "src": "2129:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILicense_$1143_$",
                            "typeString": "type(contract ILicense)"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2129:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILicense_$1143",
                          "typeString": "contract ILicense"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1142,
                      "src": "2129:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,uint256[] memory,uint256[] memory,uint256[] memory,address,address) external"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2129:190:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2129:190:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 158,
                        "name": "licenseContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2392:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 155,
                        "name": "allLicenses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "2375:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2375:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2375:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2375:33:1"
                },
                {
                  "expression": {
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 161,
                        "name": "licensePosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "2418:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 163,
                      "indexExpression": {
                        "id": 162,
                        "name": "licenseContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2434:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2418:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 164,
                        "name": "allLicenses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "2453:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2453:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2418:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "2418:53:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 169,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "2514:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 170,
                        "name": "licenseTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "2536:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 171,
                        "name": "licensePrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "2562:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 172,
                        "name": "licenseSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2589:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 173,
                        "name": "licenseContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2616:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 174,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2645:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2645:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 168,
                      "name": "LicenseCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2486:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,uint256[] memory,uint256[] memory,uint256[] memory,address,address)"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2486:179:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "EmitStatement",
                  "src": "2481:184:1"
                },
                {
                  "expression": {
                    "id": 178,
                    "name": "licenseContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 115,
                    "src": "2682:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 116,
                  "id": 179,
                  "nodeType": "Return",
                  "src": "2675:22:1"
                }
              ]
            },
            "functionSelector": "d2d00c02",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLicense",
            "nameLocation": "1588:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "ipfsHash",
                  "nameLocation": "1619:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1611:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1611:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "licenseTypes",
                  "nameLocation": "1656:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1637:31:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 104,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1637:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 105,
                    "nodeType": "ArrayTypeName",
                    "src": "1637:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "licensePrices",
                  "nameLocation": "1697:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1678:32:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 107,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1678:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 108,
                    "nodeType": "ArrayTypeName",
                    "src": "1678:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "licenseSupply",
                  "nameLocation": "1739:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1720:32:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 110,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1720:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 111,
                    "nodeType": "ArrayTypeName",
                    "src": "1720:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1601:157:1"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "licenseContract",
                  "nameLocation": "1785:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1777:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1776:25:1"
            },
            "scope": 246,
            "src": "1579:1125:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "2773:162:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 189,
                          "name": "_treasuryFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "2841:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3135",
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2857:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        "src": "2841:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4645452043414e4e4f5420424520484947484552205448414e203135",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2861:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc13becab2439c54d5cef4ad5737efb6b6d2f8a984841803c3176f9f81d25f96",
                          "typeString": "literal_string \"FEE CANNOT BE HIGHER THAN 15\""
                        },
                        "value": "FEE CANNOT BE HIGHER THAN 15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc13becab2439c54d5cef4ad5737efb6b6d2f8a984841803c3176f9f81d25f96",
                          "typeString": "literal_string \"FEE CANNOT BE HIGHER THAN 15\""
                        }
                      ],
                      "id": 188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2833:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2833:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "2833:59:1"
                },
                {
                  "expression": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 195,
                      "name": "treasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2902:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 196,
                      "name": "_treasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "2916:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2902:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "2902:26:1"
                }
              ]
            },
            "functionSelector": "af98a739",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 186,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 185,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1190,
                  "src": "2763:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2763:9:1"
              }
            ],
            "name": "setTreasuryFee",
            "nameLocation": "2719:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "_treasuryFee",
                  "nameLocation": "2740:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "2734:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2733:20:1"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2773:0:1"
            },
            "scope": 246,
            "src": "2710:225:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "3004:162:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 208,
                          "name": "_referrerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "3072:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3135",
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3088:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        "src": "3072:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4645452043414e4e4f5420424520484947484552205448414e203135",
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3092:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc13becab2439c54d5cef4ad5737efb6b6d2f8a984841803c3176f9f81d25f96",
                          "typeString": "literal_string \"FEE CANNOT BE HIGHER THAN 15\""
                        },
                        "value": "FEE CANNOT BE HIGHER THAN 15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc13becab2439c54d5cef4ad5737efb6b6d2f8a984841803c3176f9f81d25f96",
                          "typeString": "literal_string \"FEE CANNOT BE HIGHER THAN 15\""
                        }
                      ],
                      "id": 207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3064:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3064:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "3064:59:1"
                },
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 214,
                      "name": "referrerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "3133:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 215,
                      "name": "_referrerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "3147:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3133:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3133:26:1"
                }
              ]
            },
            "functionSelector": "c8b01e08",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 205,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 204,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1190,
                  "src": "2994:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2994:9:1"
              }
            ],
            "name": "setReferrerFee",
            "nameLocation": "2950:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "_referrerFee",
                  "nameLocation": "2971:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "2965:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2965:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2964:20:1"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3004:0:1"
            },
            "scope": 246,
            "src": "2941:225:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "3243:49:1",
              "statements": [
                {
                  "expression": {
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 226,
                      "name": "treasuryWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "3253:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 227,
                      "name": "_treasuryWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "3270:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3253:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "3253:32:1"
                }
              ]
            },
            "functionSelector": "a8602fea",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 224,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 223,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1190,
                  "src": "3233:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3233:9:1"
              }
            ],
            "name": "setTreasuryWallet",
            "nameLocation": "3181:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "_treasuryWallet",
                  "nameLocation": "3207:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "3199:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3199:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3198:25:1"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3243:0:1"
            },
            "scope": 246,
            "src": "3172:120:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "3440:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 241,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "3477:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 238,
                        "name": "availableLicenseTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "3450:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3450:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3450:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "3450:36:1"
                }
              ]
            },
            "functionSelector": "c0739270",
            "id": 245,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 236,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 235,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1190,
                  "src": "3430:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3430:9:1"
              }
            ],
            "name": "addLicenseType",
            "nameLocation": "3388:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "ipfsHash",
                  "nameLocation": "3411:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "3403:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3403:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3402:18:1"
            },
            "returnParameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3440:0:1"
            },
            "scope": 246,
            "src": "3379:114:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 247,
        "src": "273:3222:1",
        "usedErrors": []
      }
    ],
    "src": "37:3459:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/jp/Documents/GitHub/learn-truffle/contracts/Factory.sol",
    "exportedSymbols": {
      "Address": [
        3495
      ],
      "Context": [
        3516
      ],
      "Create2": [
        3627
      ],
      "ERC1155": [
        2372
      ],
      "ERC165": [
        3651
      ],
      "Factory": [
        246
      ],
      "IERC1155": [
        2494
      ],
      "IERC1155MetadataURI": [
        2550
      ],
      "IERC1155Receiver": [
        2535
      ],
      "IERC165": [
        3663
      ],
      "IERC20": [
        3174
      ],
      "ILicense": [
        1143
      ],
      "License": [
        968
      ],
      "Ownable": [
        1247
      ],
      "ReentrancyGuard": [
        1287
      ],
      "TransferHelper": [
        3823
      ]
    },
    "id": 247,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 25,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
        "file": "@openzeppelin/contracts/utils/Create2.sol",
        "id": 26,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 247,
        "sourceUnit": 3628,
        "src": "63:51:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 27,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 247,
        "sourceUnit": 1248,
        "src": "115:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jp/Documents/GitHub/learn-truffle/contracts/License.sol",
        "file": "./License.sol",
        "id": 28,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 247,
        "sourceUnit": 969,
        "src": "169:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jp/Documents/GitHub/learn-truffle/contracts/interfaces/ILicense.sol",
        "file": "./interfaces/ILicense.sol",
        "id": 29,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 247,
        "sourceUnit": 1144,
        "src": "193:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1247,
              "src": "293:7:1"
            },
            "id": 31,
            "nodeType": "InheritanceSpecifier",
            "src": "293:7:1"
          }
        ],
        "canonicalName": "Factory",
        "contractDependencies": [
          968
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 246,
        "linearizedBaseContracts": [
          246,
          1247,
          3516
        ],
        "name": "Factory",
        "nameLocation": "282:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 48,
            "name": "LicenseCreated",
            "nameLocation": "313:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ipfsHash",
                  "nameLocation": "345:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "337:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "licenseTypes",
                  "nameLocation": "373:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "363:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "363:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 35,
                    "nodeType": "ArrayTypeName",
                    "src": "363:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "licensePrices",
                  "nameLocation": "405:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "395:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "395:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38,
                    "nodeType": "ArrayTypeName",
                    "src": "395:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "licenseSupply",
                  "nameLocation": "438:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "428:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "428:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41,
                    "nodeType": "ArrayTypeName",
                    "src": "428:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "licenseContract",
                  "nameLocation": "469:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "461:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "502:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "494:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "327:188:1"
            },
            "src": "307:209:1"
          },
          {
            "constant": false,
            "functionSelector": "cc32d176",
            "id": 51,
            "mutability": "mutable",
            "name": "treasuryFee",
            "nameLocation": "535:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 246,
            "src": "522:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 49,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "522:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 50,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "549:2:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e88a7bd",
            "id": 54,
            "mutability": "mutable",
            "name": "referrerFee",
            "nameLocation": "570:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 246,
            "src": "557:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 52,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "557:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "584:2:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4626402b",
            "id": 56,
            "mutability": "mutable",
            "name": "treasuryWallet",
            "nameLocation": "608:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 246,
            "src": "593:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 55,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "593:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89a30271",
            "id": 58,
            "mutability": "immutable",
            "name": "USDC",
            "nameLocation": "653:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 246,
            "src": "628:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 57,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "628:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "740:66:1",
              "statements": [
                {
                  "expression": {
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "treasuryWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "750:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 64,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "767:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "767:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "750:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "750:27:1"
                },
                {
                  "expression": {
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68,
                      "name": "USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "787:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 69,
                      "name": "_USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "794:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "787:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "787:12:1"
                }
              ]
            },
            "id": 73,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "_USDC",
                  "nameLocation": "733:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "725:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "725:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "724:15:1"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "740:0:1"
            },
            "scope": 246,
            "src": "713:93:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "80ed4930",
            "id": 76,
            "mutability": "mutable",
            "name": "availableLicenseTypes",
            "nameLocation": "829:21:1",
            "nodeType": "VariableDeclaration",
            "scope": 246,
            "src": "812:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 74,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "812:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 75,
              "nodeType": "ArrayTypeName",
              "src": "812:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1487c506",
            "id": 79,
            "mutability": "mutable",
            "name": "allLicenses",
            "nameLocation": "874:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 246,
            "src": "857:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 77,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "857:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 78,
              "nodeType": "ArrayTypeName",
              "src": "857:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "02c6a0a5",
            "id": 83,
            "mutability": "mutable",
            "name": "licensePosition",
            "nameLocation": "926:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 246,
            "src": "891:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 82,
              "keyType": {
                "id": 80,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "899:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "891:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 81,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "910:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1019:52:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 88,
                      "name": "availableLicenseTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "1036:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1036:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87,
                  "id": 90,
                  "nodeType": "Return",
                  "src": "1029:35:1"
                }
              ]
            },
            "functionSelector": "b5811ad2",
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableLicenseTypesLength",
            "nameLocation": "957:27:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "984:2:1"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1010:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1009:9:1"
            },
            "scope": 246,
            "src": "948:123:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1138:42:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 97,
                      "name": "allLicenses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1155:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1155:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 96,
                  "id": 99,
                  "nodeType": "Return",
                  "src": "1148:25:1"
                }
              ]
            },
            "functionSelector": "ec9372e9",
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allLicensesLength",
            "nameLocation": "1086:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1103:2:1"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1129:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1128:9:1"
            },
            "scope": 246,
            "src": "1077:103:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "1802:902:1",
              "statements": [
                {
                  "assignments": [
                    118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 118,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1863:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "1850:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1850:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 123,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 120,
                          "name": "License",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 968,
                          "src": "1879:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_License_$968_$",
                            "typeString": "type(contract License)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_License_$968_$",
                            "typeString": "type(contract License)"
                          }
                        ],
                        "id": 119,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1874:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1874:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_License_$968",
                        "typeString": "type(contract License)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1874:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1850:50:1"
                },
                {
                  "expression": {
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "licenseContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "1910:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1943:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 128,
                          "name": "ipfsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "1946:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 129,
                          "name": "bytecode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "1956:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 125,
                          "name": "Create2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3627,
                          "src": "1928:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Create2_$3627_$",
                            "typeString": "type(library Create2)"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deploy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3567,
                        "src": "1928:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (uint256,bytes32,bytes memory) returns (address)"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1928:37:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1910:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1910:55:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 134,
                            "name": "licensePosition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "2063:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 136,
                          "indexExpression": {
                            "id": 135,
                            "name": "licenseContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "2079:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2063:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2099:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2063:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c4943454e534520455849535453",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2102:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef169b8375f3054755fe4e0914e6c09703f3e40b38ba210ddaf686122b20e258",
                          "typeString": "literal_string \"LICENSE EXISTS\""
                        },
                        "value": "LICENSE EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef169b8375f3054755fe4e0914e6c09703f3e40b38ba210ddaf686122b20e258",
                          "typeString": "literal_string \"LICENSE EXISTS\""
                        }
                      ],
                      "id": 133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2055:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2055:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2055:64:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 146,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "2179:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 147,
                        "name": "licenseTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "2201:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 148,
                        "name": "licensePrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "2227:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 149,
                        "name": "licenseSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2254:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2281:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2281:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 152,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2305:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 143,
                            "name": "licenseContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "2138:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 142,
                          "name": "ILicense",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1143,
                          "src": "2129:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILicense_$1143_$",
                            "typeString": "type(contract ILicense)"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2129:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILicense_$1143",
                          "typeString": "contract ILicense"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1142,
                      "src": "2129:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,uint256[] memory,uint256[] memory,uint256[] memory,address,address) external"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2129:190:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2129:190:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 158,
                        "name": "licenseContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2392:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 155,
                        "name": "allLicenses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "2375:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2375:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2375:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2375:33:1"
                },
                {
                  "expression": {
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 161,
                        "name": "licensePosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "2418:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 163,
                      "indexExpression": {
                        "id": 162,
                        "name": "licenseContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2434:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2418:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 164,
                        "name": "allLicenses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "2453:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2453:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2418:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "2418:53:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 169,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "2514:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 170,
                        "name": "licenseTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "2536:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 171,
                        "name": "licensePrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "2562:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 172,
                        "name": "licenseSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2589:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 173,
                        "name": "licenseContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2616:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 174,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2645:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2645:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 168,
                      "name": "LicenseCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2486:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,uint256[] memory,uint256[] memory,uint256[] memory,address,address)"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2486:179:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "EmitStatement",
                  "src": "2481:184:1"
                },
                {
                  "expression": {
                    "id": 178,
                    "name": "licenseContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 115,
                    "src": "2682:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 116,
                  "id": 179,
                  "nodeType": "Return",
                  "src": "2675:22:1"
                }
              ]
            },
            "functionSelector": "d2d00c02",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLicense",
            "nameLocation": "1588:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "ipfsHash",
                  "nameLocation": "1619:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1611:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1611:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "licenseTypes",
                  "nameLocation": "1656:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1637:31:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 104,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1637:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 105,
                    "nodeType": "ArrayTypeName",
                    "src": "1637:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "licensePrices",
                  "nameLocation": "1697:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1678:32:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 107,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1678:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 108,
                    "nodeType": "ArrayTypeName",
                    "src": "1678:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "licenseSupply",
                  "nameLocation": "1739:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1720:32:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 110,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1720:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 111,
                    "nodeType": "ArrayTypeName",
                    "src": "1720:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1601:157:1"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "licenseContract",
                  "nameLocation": "1785:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1777:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1776:25:1"
            },
            "scope": 246,
            "src": "1579:1125:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "2773:162:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 189,
                          "name": "_treasuryFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "2841:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3135",
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2857:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        "src": "2841:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4645452043414e4e4f5420424520484947484552205448414e203135",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2861:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc13becab2439c54d5cef4ad5737efb6b6d2f8a984841803c3176f9f81d25f96",
                          "typeString": "literal_string \"FEE CANNOT BE HIGHER THAN 15\""
                        },
                        "value": "FEE CANNOT BE HIGHER THAN 15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc13becab2439c54d5cef4ad5737efb6b6d2f8a984841803c3176f9f81d25f96",
                          "typeString": "literal_string \"FEE CANNOT BE HIGHER THAN 15\""
                        }
                      ],
                      "id": 188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2833:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2833:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "2833:59:1"
                },
                {
                  "expression": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 195,
                      "name": "treasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2902:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 196,
                      "name": "_treasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "2916:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2902:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "2902:26:1"
                }
              ]
            },
            "functionSelector": "af98a739",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 186,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 185,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1190,
                  "src": "2763:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2763:9:1"
              }
            ],
            "name": "setTreasuryFee",
            "nameLocation": "2719:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "_treasuryFee",
                  "nameLocation": "2740:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "2734:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2733:20:1"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2773:0:1"
            },
            "scope": 246,
            "src": "2710:225:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "3004:162:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 208,
                          "name": "_referrerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "3072:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3135",
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3088:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        "src": "3072:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4645452043414e4e4f5420424520484947484552205448414e203135",
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3092:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc13becab2439c54d5cef4ad5737efb6b6d2f8a984841803c3176f9f81d25f96",
                          "typeString": "literal_string \"FEE CANNOT BE HIGHER THAN 15\""
                        },
                        "value": "FEE CANNOT BE HIGHER THAN 15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc13becab2439c54d5cef4ad5737efb6b6d2f8a984841803c3176f9f81d25f96",
                          "typeString": "literal_string \"FEE CANNOT BE HIGHER THAN 15\""
                        }
                      ],
                      "id": 207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3064:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3064:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "3064:59:1"
                },
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 214,
                      "name": "referrerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "3133:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 215,
                      "name": "_referrerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "3147:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3133:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3133:26:1"
                }
              ]
            },
            "functionSelector": "c8b01e08",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 205,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 204,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1190,
                  "src": "2994:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2994:9:1"
              }
            ],
            "name": "setReferrerFee",
            "nameLocation": "2950:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "_referrerFee",
                  "nameLocation": "2971:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "2965:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2965:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2964:20:1"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3004:0:1"
            },
            "scope": 246,
            "src": "2941:225:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "3243:49:1",
              "statements": [
                {
                  "expression": {
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 226,
                      "name": "treasuryWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "3253:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 227,
                      "name": "_treasuryWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "3270:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3253:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "3253:32:1"
                }
              ]
            },
            "functionSelector": "a8602fea",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 224,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 223,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1190,
                  "src": "3233:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3233:9:1"
              }
            ],
            "name": "setTreasuryWallet",
            "nameLocation": "3181:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "_treasuryWallet",
                  "nameLocation": "3207:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "3199:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3199:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3198:25:1"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3243:0:1"
            },
            "scope": 246,
            "src": "3172:120:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "3440:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 241,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "3477:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 238,
                        "name": "availableLicenseTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "3450:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3450:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3450:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "3450:36:1"
                }
              ]
            },
            "functionSelector": "c0739270",
            "id": 245,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 236,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 235,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1190,
                  "src": "3430:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3430:9:1"
              }
            ],
            "name": "addLicenseType",
            "nameLocation": "3388:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "ipfsHash",
                  "nameLocation": "3411:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "3403:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3403:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3402:18:1"
            },
            "returnParameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3440:0:1"
            },
            "scope": 246,
            "src": "3379:114:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 247,
        "src": "273:3222:1",
        "usedErrors": []
      }
    ],
    "src": "37:3459:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xd01A2Abd21c8bfAE609FbD464b55b94C9BD9aC54",
      "transactionHash": "0xeb9c2cd72a264d1ec0762466eb0d6437a60601ec8a69d04a25ad3f9cd0ef4626"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-10-03T19:19:39.677Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}